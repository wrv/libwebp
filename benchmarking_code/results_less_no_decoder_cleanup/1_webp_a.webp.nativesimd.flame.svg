<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>do_brk_flags (2,769,781 samples, 0.57%)</title><rect x="1151.7" y="197" width="6.7" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1154.68" y="207.5" ></text>
</g>
<g >
<title>TransformAC3_C (5,474,782 samples, 1.13%)</title><rect x="109.0" y="261" width="13.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="111.97" y="271.5" ></text>
</g>
<g >
<title>setup_arg_pages (239,345 samples, 0.05%)</title><rect x="1151.1" y="149" width="0.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1154.10" y="159.5" ></text>
</g>
<g >
<title>VR4_SSE2 (923,689 samples, 0.19%)</title><rect x="243.6" y="261" width="2.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="246.60" y="271.5" ></text>
</g>
<g >
<title>__folio_alloc (11,086,544 samples, 2.29%)</title><rect x="1110.9" y="117" width="27.0" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1113.93" y="127.5" >_..</text>
</g>
<g >
<title>tlb_batch_pages_flush (4,622,948 samples, 0.95%)</title><rect x="1171.9" y="133" width="11.3" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="1174.90" y="143.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (924,058 samples, 0.19%)</title><rect x="1108.7" y="85" width="2.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1111.68" y="95.5" ></text>
</g>
<g >
<title>do_user_addr_fault (4,618,215 samples, 0.95%)</title><rect x="609.9" y="181" width="11.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="612.85" y="191.5" ></text>
</g>
<g >
<title>Transform_SSE2 (4,620,284 samples, 0.95%)</title><rect x="418.8" y="245" width="11.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="421.80" y="255.5" ></text>
</g>
<g >
<title>[unknown] (371,991,339 samples, 76.77%)</title><rect x="245.8" y="261" width="905.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="248.85" y="271.5" >[unknown]</text>
</g>
<g >
<title>_raw_spin_lock (924,141 samples, 0.19%)</title><rect x="609.9" y="133" width="2.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="612.85" y="143.5" ></text>
</g>
<g >
<title>exc_page_fault (4,618,215 samples, 0.95%)</title><rect x="609.9" y="197" width="11.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="612.85" y="207.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (23,073,677 samples, 4.76%)</title><rect x="1093.0" y="213" width="56.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1095.99" y="223.5" >asm_e..</text>
</g>
<g >
<title>exit_to_user_mode_prepare (924,134 samples, 0.19%)</title><rect x="1146.9" y="181" width="2.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1149.93" y="191.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7,394,132 samples, 1.53%)</title><rect x="1171.9" y="261" width="18.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1174.90" y="271.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,857,832 samples, 0.38%)</title><rect x="1167.4" y="197" width="4.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1170.38" y="207.5" ></text>
</g>
<g >
<title>update_load_avg (912,117 samples, 0.19%)</title><rect x="1068.3" y="53" width="2.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1071.28" y="63.5" ></text>
</g>
<g >
<title>__cgroup_throttle_swaprate (924,359 samples, 0.19%)</title><rect x="1104.2" y="133" width="2.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1107.18" y="143.5" ></text>
</g>
<g >
<title>do_user_addr_fault (787,444 samples, 0.16%)</title><rect x="1149.2" y="181" width="1.9" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1152.18" y="191.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (890,955 samples, 0.18%)</title><rect x="241.4" y="245" width="2.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="244.43" y="255.5" ></text>
</g>
<g >
<title>UpsampleRgbaLinePair_SSE2 (7,391,705 samples, 1.53%)</title><rect x="153.8" y="261" width="18.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="156.79" y="271.5" ></text>
</g>
<g >
<title>vma_alloc_folio (3,694,074 samples, 0.76%)</title><rect x="612.1" y="133" width="9.0" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="615.10" y="143.5" ></text>
</g>
<g >
<title>blk_cgroup_congested (924,359 samples, 0.19%)</title><rect x="1104.2" y="117" width="2.2" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1107.18" y="127.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (7,394,132 samples, 1.53%)</title><rect x="1171.9" y="229" width="18.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1174.90" y="239.5" ></text>
</g>
<g >
<title>charge_memcg (924,428 samples, 0.19%)</title><rect x="1106.4" y="117" width="2.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1109.43" y="127.5" ></text>
</g>
<g >
<title>__handle_mm_fault (14,782,912 samples, 3.05%)</title><rect x="1101.9" y="149" width="36.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1104.93" y="159.5" >__h..</text>
</g>
<g >
<title>mas_mab_cp (922,211 samples, 0.19%)</title><rect x="1151.7" y="149" width="2.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1154.68" y="159.5" ></text>
</g>
<g >
<title>BuildHuffmanTable (4,617,392 samples, 0.95%)</title><rect x="10.0" y="261" width="11.2" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>__tlb_remove_page_size (923,742 samples, 0.19%)</title><rect x="1183.2" y="117" width="2.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1186.16" y="127.5" ></text>
</g>
<g >
<title>try_charge_memcg (934,599 samples, 0.19%)</title><rect x="1169.6" y="133" width="2.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1172.62" y="143.5" ></text>
</g>
<g >
<title>DoFilter6_SSE2 (6,434,658 samples, 1.33%)</title><rect x="248.1" y="245" width="15.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="251.09" y="255.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (4,622,948 samples, 0.95%)</title><rect x="1171.9" y="149" width="11.3" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1174.90" y="159.5" ></text>
</g>
<g >
<title>bprm_execve (239,345 samples, 0.05%)</title><rect x="1151.1" y="181" width="0.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1154.10" y="191.5" ></text>
</g>
<g >
<title>free_unref_page_list (4,622,948 samples, 0.95%)</title><rect x="1171.9" y="101" width="11.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1174.90" y="111.5" ></text>
</g>
<g >
<title>exit_mmap (7,394,132 samples, 1.53%)</title><rect x="1171.9" y="165" width="18.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1174.90" y="175.5" ></text>
</g>
<g >
<title>vma_alloc_folio (11,086,544 samples, 2.29%)</title><rect x="1110.9" y="133" width="27.0" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1113.93" y="143.5" >v..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (912,117 samples, 0.19%)</title><rect x="1068.3" y="197" width="2.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1071.28" y="207.5" ></text>
</g>
<g >
<title>task_tick_fair (912,117 samples, 0.19%)</title><rect x="1068.3" y="69" width="2.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1071.28" y="79.5" ></text>
</g>
<g >
<title>update_process_times (912,117 samples, 0.19%)</title><rect x="1068.3" y="101" width="2.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1071.28" y="111.5" ></text>
</g>
<g >
<title>LD4_SSE2 (923,352 samples, 0.19%)</title><rect x="95.5" y="261" width="2.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="98.47" y="271.5" ></text>
</g>
<g >
<title>VP8ParseIntraModeRow (46,134,751 samples, 9.52%)</title><rect x="475.0" y="245" width="112.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="478.02" y="255.5" >VP8ParseIntra..</text>
</g>
<g >
<title>mas_wr_spanning_store.isra.0 (1,846,600 samples, 0.38%)</title><rect x="1151.7" y="165" width="4.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1154.68" y="175.5" ></text>
</g>
<g >
<title>mtree_range_walk (923,424 samples, 0.19%)</title><rect x="1144.7" y="117" width="2.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1147.68" y="127.5" ></text>
</g>
<g >
<title>ReconstructRow (1,846,897 samples, 0.38%)</title><rect x="97.7" y="261" width="4.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="100.72" y="271.5" ></text>
</g>
<g >
<title>__alloc_pages (3,694,074 samples, 0.76%)</title><rect x="612.1" y="101" width="9.0" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="615.10" y="111.5" ></text>
</g>
<g >
<title>__alloc_pages (11,086,544 samples, 2.29%)</title><rect x="1110.9" y="101" width="27.0" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1113.93" y="111.5" >_..</text>
</g>
<g >
<title>mas_next_entry (904,118 samples, 0.19%)</title><rect x="1158.4" y="197" width="2.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1161.42" y="207.5" ></text>
</g>
<g >
<title>__tunables_init (787,444 samples, 0.16%)</title><rect x="1149.2" y="229" width="1.9" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1152.18" y="239.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (912,117 samples, 0.19%)</title><rect x="1068.3" y="181" width="2.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1071.28" y="191.5" ></text>
</g>
<g >
<title>HFilter8_SSE2 (4,619,288 samples, 0.95%)</title><rect x="376.1" y="245" width="11.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="379.10" y="255.5" ></text>
</g>
<g >
<title>get_page_from_freelist (923,742 samples, 0.19%)</title><rect x="1183.2" y="69" width="2.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1186.16" y="79.5" ></text>
</g>
<g >
<title>HU4_C (1,848,242 samples, 0.38%)</title><rect x="91.0" y="261" width="4.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="93.97" y="271.5" ></text>
</g>
<g >
<title>mprotect_fixup (239,345 samples, 0.05%)</title><rect x="1151.1" y="133" width="0.6" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1154.10" y="143.5" ></text>
</g>
<g >
<title>VE4_SSE2 (923,422 samples, 0.19%)</title><rect x="171.8" y="261" width="2.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="174.79" y="271.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (912,117 samples, 0.19%)</title><rect x="1068.3" y="213" width="2.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1071.28" y="223.5" ></text>
</g>
<g >
<title>rmqueue_bulk (923,774 samples, 0.19%)</title><rect x="1135.7" y="69" width="2.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1138.68" y="79.5" ></text>
</g>
<g >
<title>HFilter8i_SSE2 (1,848,689 samples, 0.38%)</title><rect x="387.3" y="245" width="4.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="390.35" y="255.5" ></text>
</g>
<g >
<title>perf_iterate_sb (923,181 samples, 0.19%)</title><rect x="1156.2" y="165" width="2.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1159.17" y="175.5" ></text>
</g>
<g >
<title>VP8DecompressAlphaRows (911,912 samples, 0.19%)</title><rect x="183.0" y="261" width="2.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="186.04" y="271.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1,857,832 samples, 0.38%)</title><rect x="1167.4" y="213" width="4.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1170.38" y="223.5" ></text>
</g>
<g >
<title>do_fault (787,444 samples, 0.16%)</title><rect x="1149.2" y="133" width="1.9" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1152.18" y="143.5" ></text>
</g>
<g >
<title>do_group_exit (7,394,132 samples, 1.53%)</title><rect x="1171.9" y="213" width="18.0" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1174.90" y="223.5" ></text>
</g>
<g >
<title>__alloc_pages (923,742 samples, 0.19%)</title><rect x="1183.2" y="85" width="2.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1186.16" y="95.5" ></text>
</g>
<g >
<title>exc_page_fault (1,857,832 samples, 0.38%)</title><rect x="1167.4" y="229" width="4.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1170.38" y="239.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (924,134 samples, 0.19%)</title><rect x="1146.9" y="197" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1149.93" y="207.5" ></text>
</g>
<g >
<title>VFilter8i_SSE2 (923,952 samples, 0.19%)</title><rect x="174.0" y="261" width="2.3" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="177.04" y="271.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1,857,832 samples, 0.38%)</title><rect x="1167.4" y="245" width="4.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1170.38" y="255.5" ></text>
</g>
<g >
<title>all (484,581,591 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (239,345 samples, 0.05%)</title><rect x="1151.1" y="197" width="0.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1154.10" y="207.5" ></text>
</g>
<g >
<title>GetCoeffsFast (924,364 samples, 0.19%)</title><rect x="263.8" y="245" width="2.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="266.76" y="255.5" ></text>
</g>
<g >
<title>VFilter16_SSE2 (923,273 samples, 0.19%)</title><rect x="434.5" y="245" width="2.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="437.55" y="255.5" ></text>
</g>
<g >
<title>__count_memcg_events (890,955 samples, 0.18%)</title><rect x="241.4" y="165" width="2.2" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="244.43" y="175.5" ></text>
</g>
<g >
<title>VP8GetValue (2,751,794 samples, 0.57%)</title><rect x="185.3" y="261" width="6.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="188.26" y="271.5" ></text>
</g>
<g >
<title>__get_free_pages (923,742 samples, 0.19%)</title><rect x="1183.2" y="101" width="2.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1186.16" y="111.5" ></text>
</g>
<g >
<title>exc_page_fault (890,955 samples, 0.18%)</title><rect x="241.4" y="229" width="2.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="244.43" y="239.5" ></text>
</g>
<g >
<title>decode_webp_nat (484,542,425 samples, 99.99%)</title><rect x="10.0" y="277" width="1179.9" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="13.00" y="287.5" >decode_webp_nat</text>
</g>
<g >
<title>Transform_SSE2 (12,932,064 samples, 2.67%)</title><rect x="122.3" y="261" width="31.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="125.30" y="271.5" >Tr..</text>
</g>
<g >
<title>exc_page_fault (787,444 samples, 0.16%)</title><rect x="1149.2" y="197" width="1.9" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1152.18" y="207.5" ></text>
</g>
<g >
<title>ReconstructRow (7,370,446 samples, 1.52%)</title><rect x="396.3" y="245" width="18.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="399.35" y="255.5" ></text>
</g>
<g >
<title>do_exit (7,394,132 samples, 1.53%)</title><rect x="1171.9" y="197" width="18.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1174.90" y="207.5" ></text>
</g>
<g >
<title>VP8ParseProba (1,839,157 samples, 0.38%)</title><rect x="192.0" y="261" width="4.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="194.96" y="271.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (934,599 samples, 0.19%)</title><rect x="1169.6" y="165" width="2.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1172.62" y="175.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (924,428 samples, 0.19%)</title><rect x="1106.4" y="133" width="2.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1109.43" y="143.5" ></text>
</g>
<g >
<title>VP8YuvToRgba32_SSE2 (19,365,256 samples, 4.00%)</title><rect x="196.4" y="261" width="47.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="199.44" y="271.5" >VP8Y..</text>
</g>
<g >
<title>scheduler_tick (912,117 samples, 0.19%)</title><rect x="1068.3" y="85" width="2.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1071.28" y="95.5" ></text>
</g>
<g >
<title>mas_next_entry (239,345 samples, 0.05%)</title><rect x="1151.1" y="85" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1154.10" y="95.5" ></text>
</g>
<g >
<title>__folio_alloc (3,694,074 samples, 0.76%)</title><rect x="612.1" y="117" width="9.0" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="615.10" y="127.5" ></text>
</g>
<g >
<title>__do_sys_brk (3,673,899 samples, 0.76%)</title><rect x="1151.7" y="213" width="8.9" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1154.68" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_execve (239,345 samples, 0.05%)</title><rect x="1151.1" y="213" width="0.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1154.10" y="223.5" ></text>
</g>
<g >
<title>mas_spanning_rebalance.isra.0 (924,389 samples, 0.19%)</title><rect x="1153.9" y="149" width="2.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1156.92" y="159.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (26,769,426 samples, 5.52%)</title><rect x="1084.0" y="229" width="65.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1086.99" y="239.5" >__memmo..</text>
</g>
<g >
<title>find_vma (923,424 samples, 0.19%)</title><rect x="1144.7" y="149" width="2.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1147.68" y="159.5" ></text>
</g>
<g >
<title>DC16NoTop_SSE2 (923,525 samples, 0.19%)</title><rect x="245.8" y="245" width="2.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="248.85" y="255.5" ></text>
</g>
<g >
<title>lru_add_fn (924,058 samples, 0.19%)</title><rect x="1108.7" y="101" width="2.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1111.68" y="111.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,673,899 samples, 0.76%)</title><rect x="1151.7" y="245" width="8.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1154.68" y="255.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (3,696,835 samples, 0.76%)</title><rect x="1174.2" y="85" width="9.0" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1177.15" y="95.5" ></text>
</g>
<g >
<title>TransformDC_C (1,847,867 samples, 0.38%)</title><rect x="414.3" y="245" width="4.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="417.30" y="255.5" ></text>
</g>
<g >
<title>clear_page_rep (10,162,770 samples, 2.10%)</title><rect x="1110.9" y="69" width="24.8" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1113.93" y="79.5" >c..</text>
</g>
<g >
<title>__hrtimer_run_queues (912,117 samples, 0.19%)</title><rect x="1068.3" y="149" width="2.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1071.28" y="159.5" ></text>
</g>
<g >
<title>unmap_vmas (2,771,184 samples, 0.57%)</title><rect x="1183.2" y="149" width="6.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1186.16" y="159.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,673,899 samples, 0.76%)</title><rect x="1151.7" y="229" width="8.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1154.68" y="239.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (923,181 samples, 0.19%)</title><rect x="1156.2" y="149" width="2.2" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="1159.17" y="159.5" ></text>
</g>
<g >
<title>vma_merge (239,345 samples, 0.05%)</title><rect x="1151.1" y="117" width="0.6" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1154.10" y="127.5" ></text>
</g>
<g >
<title>HFilter16_SSE2 (1,847,855 samples, 0.38%)</title><rect x="355.9" y="245" width="4.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="358.86" y="255.5" ></text>
</g>
<g >
<title>sugov_update_single_freq (912,117 samples, 0.19%)</title><rect x="1068.3" y="37" width="2.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1071.28" y="47.5" ></text>
</g>
<g >
<title>handle_mm_fault (18,478,098 samples, 3.81%)</title><rect x="1099.7" y="165" width="45.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1102.68" y="175.5" >hand..</text>
</g>
<g >
<title>rmqueue_bulk (2,770,608 samples, 0.57%)</title><rect x="614.3" y="69" width="6.8" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="617.35" y="79.5" ></text>
</g>
<g >
<title>mt_find (923,424 samples, 0.19%)</title><rect x="1144.7" y="133" width="2.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1147.68" y="143.5" ></text>
</g>
<g >
<title>GetCoeffsFast (184,551,796 samples, 38.08%)</title><rect x="621.1" y="229" width="449.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="624.10" y="239.5" >GetCoeffsFast</text>
</g>
<g >
<title>count_memcg_events.constprop.0 (1,847,588 samples, 0.38%)</title><rect x="1137.9" y="149" width="4.5" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1140.93" y="159.5" ></text>
</g>
<g >
<title>do_syscall_64 (7,394,132 samples, 1.53%)</title><rect x="1171.9" y="245" width="18.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1174.90" y="255.5" ></text>
</g>
<g >
<title>handle_mm_fault (4,618,215 samples, 0.95%)</title><rect x="609.9" y="165" width="11.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="612.85" y="175.5" ></text>
</g>
<g >
<title>clear_page_rep (923,742 samples, 0.19%)</title><rect x="1183.2" y="53" width="2.2" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1186.16" y="63.5" ></text>
</g>
<g >
<title>call_rcu (924,389 samples, 0.19%)</title><rect x="1153.9" y="117" width="2.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1156.92" y="127.5" ></text>
</g>
<g >
<title>DecodeImageData (13,853,314 samples, 2.86%)</title><rect x="587.4" y="229" width="33.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="590.36" y="239.5" >De..</text>
</g>
<g >
<title>clear_page_rep (923,466 samples, 0.19%)</title><rect x="612.1" y="69" width="2.2" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="615.10" y="79.5" ></text>
</g>
<g >
<title>__brk (3,673,899 samples, 0.76%)</title><rect x="1151.7" y="261" width="8.9" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1154.68" y="271.5" ></text>
</g>
<g >
<title>[unknown] (231,503,914 samples, 47.77%)</title><rect x="587.4" y="245" width="563.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="590.36" y="255.5" >[unknown]</text>
</g>
<g >
<title>charge_memcg (934,599 samples, 0.19%)</title><rect x="1169.6" y="149" width="2.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1172.62" y="159.5" ></text>
</g>
<g >
<title>perf_event_mmap (923,181 samples, 0.19%)</title><rect x="1156.2" y="181" width="2.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1159.17" y="191.5" ></text>
</g>
<g >
<title>__count_memcg_events (923,863 samples, 0.19%)</title><rect x="1140.2" y="133" width="2.2" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1143.18" y="143.5" ></text>
</g>
<g >
<title>__free_one_page (3,696,835 samples, 0.76%)</title><rect x="1174.2" y="69" width="9.0" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1177.15" y="79.5" ></text>
</g>
<g >
<title>__handle_mm_fault (4,618,215 samples, 0.95%)</title><rect x="609.9" y="149" width="11.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="612.85" y="159.5" ></text>
</g>
<g >
<title>do_syscall_64 (239,345 samples, 0.05%)</title><rect x="1151.1" y="229" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1154.10" y="239.5" ></text>
</g>
<g >
<title>folio_batch_move_lru (924,058 samples, 0.19%)</title><rect x="1108.7" y="117" width="2.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1111.68" y="127.5" ></text>
</g>
<g >
<title>DC4_C (6,467,725 samples, 1.33%)</title><rect x="21.2" y="261" width="15.8" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="24.24" y="271.5" ></text>
</g>
<g >
<title>mt_find (239,345 samples, 0.05%)</title><rect x="1151.1" y="101" width="0.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1154.10" y="111.5" ></text>
</g>
<g >
<title>IDecode (1,847,770 samples, 0.38%)</title><rect x="391.8" y="245" width="4.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="394.85" y="255.5" ></text>
</g>
<g >
<title>folio_add_lru (924,058 samples, 0.19%)</title><rect x="1108.7" y="133" width="2.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1111.68" y="143.5" ></text>
</g>
<g >
<title>next_uptodate_page (787,444 samples, 0.16%)</title><rect x="1149.2" y="101" width="1.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1152.18" y="111.5" ></text>
</g>
<g >
<title>preempt_count_add (924,141 samples, 0.19%)</title><rect x="609.9" y="117" width="2.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="612.85" y="127.5" ></text>
</g>
<g >
<title>GetLargeValue (36,897,794 samples, 7.61%)</title><rect x="266.0" y="245" width="89.9" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="269.01" y="255.5" >GetLargeVa..</text>
</g>
<g >
<title>tick_sched_timer (912,117 samples, 0.19%)</title><rect x="1068.3" y="133" width="2.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1071.28" y="143.5" ></text>
</g>
<g >
<title>do_user_addr_fault (890,955 samples, 0.18%)</title><rect x="241.4" y="213" width="2.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="244.43" y="223.5" ></text>
</g>
<g >
<title>UpsampleRgbaLinePair_SSE2 (1,847,330 samples, 0.38%)</title><rect x="430.0" y="245" width="4.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="433.05" y="255.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (6,465,691 samples, 1.33%)</title><rect x="605.4" y="213" width="15.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="608.35" y="223.5" ></text>
</g>
<g >
<title>get_page_from_freelist (3,694,074 samples, 0.76%)</title><rect x="612.1" y="85" width="9.0" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="615.10" y="95.5" ></text>
</g>
<g >
<title>do_user_addr_fault (20,325,136 samples, 4.19%)</title><rect x="1097.4" y="181" width="49.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1100.43" y="191.5" >do_u..</text>
</g>
<g >
<title>__list_del_entry_valid (923,774 samples, 0.19%)</title><rect x="1135.7" y="53" width="2.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1138.68" y="63.5" ></text>
</g>
<g >
<title>HD4_C (1,847,625 samples, 0.38%)</title><rect x="86.5" y="261" width="4.5" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="89.47" y="271.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (912,117 samples, 0.19%)</title><rect x="1068.3" y="165" width="2.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1071.28" y="175.5" ></text>
</g>
<g >
<title>__mmput (7,394,132 samples, 1.53%)</title><rect x="1171.9" y="181" width="18.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1174.90" y="191.5" ></text>
</g>
<g >
<title>ExtractGreen_SSE2 (5,543,898 samples, 1.14%)</title><rect x="68.5" y="261" width="13.5" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="71.47" y="271.5" ></text>
</g>
<g >
<title>try_charge_memcg (924,428 samples, 0.19%)</title><rect x="1106.4" y="101" width="2.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1109.43" y="111.5" ></text>
</g>
<g >
<title>unmap_page_range (2,771,184 samples, 0.57%)</title><rect x="1183.2" y="133" width="6.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1186.16" y="143.5" ></text>
</g>
<g >
<title>handle_mm_fault (890,955 samples, 0.18%)</title><rect x="241.4" y="197" width="2.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="244.43" y="207.5" ></text>
</g>
<g >
<title>DispatchAlpha_SSE2 (12,928,332 samples, 2.67%)</title><rect x="37.0" y="261" width="31.5" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="39.99" y="271.5" >Di..</text>
</g>
<g >
<title>_compound_head (1,847,442 samples, 0.38%)</title><rect x="1185.4" y="117" width="4.5" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1188.41" y="127.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (924,058 samples, 0.19%)</title><rect x="1108.7" y="69" width="2.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1111.68" y="79.5" ></text>
</g>
<g >
<title>release_pages (4,622,948 samples, 0.95%)</title><rect x="1171.9" y="117" width="11.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1174.90" y="127.5" ></text>
</g>
<g >
<title>exc_page_fault (20,325,136 samples, 4.19%)</title><rect x="1097.4" y="197" width="49.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1100.43" y="207.5" >exc_..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4,630,263 samples, 0.96%)</title><rect x="1160.6" y="261" width="11.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1163.62" y="271.5" ></text>
</g>
<g >
<title>VP8LDoFillBitWindow (1,847,895 samples, 0.38%)</title><rect x="1079.5" y="229" width="4.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1082.49" y="239.5" ></text>
</g>
<g >
<title>__handle_mm_fault (787,444 samples, 0.16%)</title><rect x="1149.2" y="149" width="1.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1152.18" y="159.5" ></text>
</g>
<g >
<title>TM4_SSE2 (2,772,153 samples, 0.57%)</title><rect x="102.2" y="261" width="6.8" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="105.22" y="271.5" ></text>
</g>
<g >
<title>filemap_map_pages (787,444 samples, 0.16%)</title><rect x="1149.2" y="117" width="1.9" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="1152.18" y="127.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (890,955 samples, 0.18%)</title><rect x="241.4" y="149" width="2.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="244.43" y="159.5" ></text>
</g>
<g >
<title>__list_del_entry_valid (2,770,608 samples, 0.57%)</title><rect x="614.3" y="53" width="6.8" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="617.35" y="63.5" ></text>
</g>
<g >
<title>tick_sched_handle (912,117 samples, 0.19%)</title><rect x="1068.3" y="117" width="2.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1071.28" y="127.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (787,444 samples, 0.16%)</title><rect x="1149.2" y="213" width="1.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1152.18" y="223.5" ></text>
</g>
<g >
<title>get_page_from_freelist (11,086,544 samples, 2.29%)</title><rect x="1110.9" y="85" width="27.0" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1113.93" y="95.5" >g..</text>
</g>
<g >
<title>mas_wmb_replace (924,389 samples, 0.19%)</title><rect x="1153.9" y="133" width="2.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1156.92" y="143.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (239,345 samples, 0.05%)</title><rect x="1151.1" y="245" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1154.10" y="255.5" ></text>
</g>
<g >
<title>GetLargeValue (923,094 samples, 0.19%)</title><rect x="1070.5" y="229" width="2.2" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1073.50" y="239.5" ></text>
</g>
<g >
<title>load_elf_binary (239,345 samples, 0.05%)</title><rect x="1151.1" y="165" width="0.6" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1154.10" y="175.5" ></text>
</g>
<g >
<title>HFilter16i_SSE2 (6,462,278 samples, 1.33%)</title><rect x="360.4" y="245" width="15.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="363.36" y="255.5" ></text>
</g>
<g >
<title>GetCoeffsFast (1,847,667 samples, 0.38%)</title><rect x="82.0" y="261" width="4.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="84.97" y="271.5" ></text>
</g>
<g >
<title>handle_mm_fault (787,444 samples, 0.16%)</title><rect x="1149.2" y="165" width="1.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1152.18" y="175.5" ></text>
</g>
<g >
<title>mas_store_prealloc (1,846,600 samples, 0.38%)</title><rect x="1151.7" y="181" width="4.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1154.68" y="191.5" ></text>
</g>
<g >
<title>mem_cgroup_from_task (924,380 samples, 0.19%)</title><rect x="1142.4" y="149" width="2.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1145.43" y="159.5" ></text>
</g>
<g >
<title>ShiftBytes (2,770,945 samples, 0.57%)</title><rect x="1072.7" y="229" width="6.8" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1075.74" y="239.5" ></text>
</g>
<g >
<title>VP8DecodeMB (15,697,908 samples, 3.24%)</title><rect x="436.8" y="245" width="38.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="439.79" y="255.5" >VP8..</text>
</g>
<g >
<title>VP8DecodeMB (2,771,776 samples, 0.57%)</title><rect x="176.3" y="261" width="6.7" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="179.29" y="271.5" ></text>
</g>
<g >
<title>lock_mm_and_find_vma (923,424 samples, 0.19%)</title><rect x="1144.7" y="165" width="2.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1147.68" y="175.5" ></text>
</g>
<g >
<title>count_memcg_events.constprop.0 (890,955 samples, 0.18%)</title><rect x="241.4" y="181" width="2.2" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="244.43" y="191.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,857,832 samples, 0.38%)</title><rect x="1167.4" y="181" width="4.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1170.38" y="191.5" ></text>
</g>
</g>
</svg>
