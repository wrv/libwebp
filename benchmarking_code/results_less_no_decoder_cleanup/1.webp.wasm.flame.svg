<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="374" onload="init(evt)" viewBox="0 0 1200 374" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="374.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="357" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="357" > </text>
<g id="frames">
<g >
<title>w2c_decode__webp__wasm_UpsampleRgbaLinePair_C (424,739,171 samples, 28.24%)</title><rect x="852.4" y="293" width="333.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="855.36" y="303.5" >w2c_decode__webp__wasm_UpsampleRgbaLinePair_C</text>
</g>
<g >
<title>w2c_decode__webp__wasm_TM4_C (923,721 samples, 0.06%)</title><rect x="46.9" y="277" width="0.7" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="49.90" y="287.5" ></text>
</g>
<g >
<title>__pud_alloc (352,110 samples, 0.02%)</title><rect x="11.8" y="69" width="0.3" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="14.82" y="79.5" ></text>
</g>
<g >
<title>vma_alloc_folio (924,189 samples, 0.06%)</title><rect x="668.0" y="197" width="0.8" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="671.03" y="207.5" ></text>
</g>
<g >
<title>release_pages (924,182 samples, 0.06%)</title><rect x="10.0" y="85" width="0.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="13.00" y="95.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_VE8uv_C (922,948 samples, 0.06%)</title><rect x="57.8" y="277" width="0.7" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="60.77" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,846,659 samples, 0.12%)</title><rect x="59.9" y="277" width="1.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="62.95" y="287.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_TM8uv_C (3,695,929 samples, 0.25%)</title><rect x="747.5" y="293" width="2.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="750.50" y="303.5" ></text>
</g>
<g >
<title>clear_page_rep (923,456 samples, 0.06%)</title><rect x="721.9" y="133" width="0.7" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="724.86" y="143.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_VR4_C (1,847,438 samples, 0.12%)</title><rect x="1188.4" y="293" width="1.5" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1191.45" y="303.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (924,182 samples, 0.06%)</title><rect x="10.0" y="53" width="0.7" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="13.00" y="63.5" ></text>
</g>
<g >
<title>__mod_node_page_state (924,296 samples, 0.06%)</title><rect x="10.7" y="37" width="0.8" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="13.72" y="47.5" ></text>
</g>
<g >
<title>__x64_sys_mprotect (1,846,659 samples, 0.12%)</title><rect x="59.9" y="245" width="1.5" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="62.95" y="255.5" ></text>
</g>
<g >
<title>__alloc_pages (1,205,725 samples, 0.08%)</title><rect x="1184.6" y="165" width="0.9" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1187.60" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,848,478 samples, 0.12%)</title><rect x="10.0" y="229" width="1.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2,317,965 samples, 0.15%)</title><rect x="720.8" y="213" width="1.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="723.77" y="223.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_TransformDC_C (15,524,376 samples, 1.03%)</title><rect x="758.3" y="293" width="12.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="761.28" y="303.5" ></text>
</g>
<g >
<title>unmap_page_range (924,296 samples, 0.06%)</title><rect x="10.7" y="101" width="0.8" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="13.72" y="111.5" ></text>
</g>
<g >
<title>unmap_vmas (924,296 samples, 0.06%)</title><rect x="10.7" y="117" width="0.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="13.72" y="127.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_ReconstructRow (10,738,169 samples, 0.71%)</title><rect x="38.5" y="277" width="8.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="41.48" y="287.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_IDecode (141,739,852 samples, 9.42%)</title><rect x="557.6" y="293" width="111.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="560.56" y="303.5" >w2c_decode__w..</text>
</g>
<g >
<title>vma_alloc_folio (1,847,751 samples, 0.12%)</title><rect x="721.1" y="197" width="1.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="724.13" y="207.5" ></text>
</g>
<g >
<title>do_user_addr_fault (352,110 samples, 0.02%)</title><rect x="11.8" y="117" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="14.82" y="127.5" ></text>
</g>
<g >
<title>__folio_alloc (1,847,751 samples, 0.12%)</title><rect x="721.1" y="181" width="1.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="724.13" y="191.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_FinishRow (1,847,627 samples, 0.12%)</title><rect x="78.8" y="293" width="1.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="81.79" y="303.5" ></text>
</g>
<g >
<title>__vm_munmap (1,848,478 samples, 0.12%)</title><rect x="10.0" y="181" width="1.5" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_HE8uv_C (924,008 samples, 0.06%)</title><rect x="24.7" y="277" width="0.7" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="27.71" y="287.5" ></text>
</g>
<g >
<title>exc_page_fault (1,848,441 samples, 0.12%)</title><rect x="667.3" y="261" width="1.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="670.30" y="271.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_TransformOne_C (2,772,579 samples, 0.18%)</title><rect x="52.0" y="277" width="2.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="54.98" y="287.5" ></text>
</g>
<g >
<title>__folio_alloc (1,205,725 samples, 0.08%)</title><rect x="1184.6" y="181" width="0.9" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1187.60" y="191.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1,205,725 samples, 0.08%)</title><rect x="1184.6" y="149" width="0.9" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1187.60" y="159.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_TM16_C (2,772,142 samples, 0.18%)</title><rect x="741.7" y="293" width="2.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="744.70" y="303.5" ></text>
</g>
<g >
<title>folio_batch_move_lru (470,214 samples, 0.03%)</title><rect x="720.8" y="181" width="0.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="723.77" y="191.5" ></text>
</g>
<g >
<title>perf_iterate_sb (1,846,659 samples, 0.12%)</title><rect x="59.9" y="181" width="1.5" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="62.95" y="191.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_TransformAC3_C (10,040,672 samples, 0.67%)</title><rect x="750.4" y="293" width="7.9" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="753.40" y="303.5" ></text>
</g>
<g >
<title>free_unref_page_list (924,182 samples, 0.06%)</title><rect x="10.0" y="69" width="0.7" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="13.00" y="79.5" ></text>
</g>
<g >
<title>unmap_region (1,848,478 samples, 0.12%)</title><rect x="10.0" y="133" width="1.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="13.00" y="143.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_TM4_C (4,619,961 samples, 0.31%)</title><rect x="743.9" y="293" width="3.6" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="746.88" y="303.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_UpsampleRgbaLinePair_C (1,844,629 samples, 0.12%)</title><rect x="56.3" y="277" width="1.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="59.33" y="287.5" ></text>
</g>
<g >
<title>do_user_addr_fault (2,317,965 samples, 0.15%)</title><rect x="720.8" y="245" width="1.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="723.77" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (352,110 samples, 0.02%)</title><rect x="11.8" y="261" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="14.82" y="271.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1,205,725 samples, 0.08%)</title><rect x="1184.6" y="277" width="0.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1187.60" y="287.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (352,110 samples, 0.02%)</title><rect x="11.8" y="229" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="14.82" y="239.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1,847,889 samples, 0.12%)</title><rect x="58.5" y="293" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="61.50" y="303.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_DC8uv_C (4,619,082 samples, 0.31%)</title><rect x="75.2" y="293" width="3.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="78.16" y="303.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (924,182 samples, 0.06%)</title><rect x="10.0" y="101" width="0.7" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="13.00" y="111.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_IDecode (16,626,038 samples, 1.11%)</title><rect x="25.4" y="277" width="13.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="28.44" y="287.5" ></text>
</g>
<g >
<title>exc_page_fault (352,110 samples, 0.02%)</title><rect x="11.8" y="133" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="14.82" y="143.5" ></text>
</g>
<g >
<title>__munmap (1,848,478 samples, 0.12%)</title><rect x="10.0" y="245" width="1.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1,848,441 samples, 0.12%)</title><rect x="667.3" y="277" width="1.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="670.30" y="287.5" ></text>
</g>
<g >
<title>get_page_from_freelist (924,189 samples, 0.06%)</title><rect x="668.0" y="149" width="0.8" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="671.03" y="159.5" ></text>
</g>
<g >
<title>[unknown] (131,205 samples, 0.01%)</title><rect x="1189.9" y="293" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1192.90" y="303.5" ></text>
</g>
<g >
<title>load_elf_binary (131,205 samples, 0.01%)</title><rect x="1189.9" y="197" width="0.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1192.90" y="207.5" ></text>
</g>
<g >
<title>bprm_execve (352,110 samples, 0.02%)</title><rect x="11.8" y="213" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="14.82" y="223.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1,205,725 samples, 0.08%)</title><rect x="1184.6" y="245" width="0.9" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1187.60" y="255.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (1,846,659 samples, 0.12%)</title><rect x="59.9" y="165" width="1.5" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="62.95" y="175.5" ></text>
</g>
<g >
<title>lru_add_fn (470,214 samples, 0.03%)</title><rect x="720.8" y="165" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="723.77" y="175.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_GetLargeValue (4,619,201 samples, 0.31%)</title><rect x="21.1" y="277" width="3.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="24.09" y="287.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (470,214 samples, 0.03%)</title><rect x="720.8" y="149" width="0.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="723.77" y="159.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_GetLargeValue (57,975,212 samples, 3.85%)</title><rect x="504.8" y="293" width="45.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="507.84" y="303.5" >w2c_..</text>
</g>
<g >
<title>w2c_decode__webp__wasm_ReconstructRow (63,077,974 samples, 4.19%)</title><rect x="673.1" y="293" width="49.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="676.10" y="303.5" >w2c_..</text>
</g>
<g >
<title>__mod_lruvec_page_state (924,296 samples, 0.06%)</title><rect x="10.7" y="69" width="0.8" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.72" y="79.5" ></text>
</g>
<g >
<title>__handle_mm_fault (924,189 samples, 0.06%)</title><rect x="668.0" y="213" width="0.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="671.03" y="223.5" ></text>
</g>
<g >
<title>__alloc_pages (924,189 samples, 0.06%)</title><rect x="668.0" y="165" width="0.8" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="671.03" y="175.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_VP8GetValue (2,770,947 samples, 0.18%)</title><rect x="1186.3" y="293" width="2.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1189.27" y="303.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (352,110 samples, 0.02%)</title><rect x="11.8" y="149" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="14.82" y="159.5" ></text>
</g>
<g >
<title>__folio_alloc (924,189 samples, 0.06%)</title><rect x="668.0" y="181" width="0.8" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="671.03" y="191.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1,848,441 samples, 0.12%)</title><rect x="667.3" y="245" width="1.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="670.30" y="255.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1,847,751 samples, 0.12%)</title><rect x="721.1" y="149" width="1.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="724.13" y="159.5" ></text>
</g>
<g >
<title>__vfprintf_internal (466,533 samples, 0.03%)</title><rect x="11.5" y="245" width="0.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="14.45" y="255.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_LD4_C (2,771,879 samples, 0.18%)</title><rect x="668.8" y="293" width="2.1" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="671.75" y="303.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_TransformDC_C (2,771,779 samples, 0.18%)</title><rect x="49.8" y="277" width="2.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="52.80" y="287.5" ></text>
</g>
<g >
<title>folio_add_lru (470,214 samples, 0.03%)</title><rect x="720.8" y="197" width="0.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="723.77" y="207.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (924,182 samples, 0.06%)</title><rect x="10.0" y="117" width="0.7" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="13.00" y="127.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (3,241,493 samples, 0.22%)</title><rect x="720.0" y="277" width="2.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="723.04" y="287.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_SimpleHFilter16i_C (12,009,240 samples, 0.80%)</title><rect x="726.9" y="293" width="9.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="729.93" y="303.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_HD4_C (1,847,618 samples, 0.12%)</title><rect x="550.3" y="293" width="1.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="553.32" y="303.5" ></text>
</g>
<g >
<title>clear_user_rep_good (352,110 samples, 0.02%)</title><rect x="11.8" y="165" width="0.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="14.82" y="175.5" ></text>
</g>
<g >
<title>exc_page_fault (2,317,965 samples, 0.15%)</title><rect x="720.8" y="261" width="1.8" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="723.77" y="271.5" ></text>
</g>
<g >
<title>handle_mm_fault (352,110 samples, 0.02%)</title><rect x="11.8" y="101" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="14.82" y="111.5" ></text>
</g>
<g >
<title>[unknown] (61,823,727 samples, 4.11%)</title><rect x="10.0" y="293" width="48.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="303.5" >[unk..</text>
</g>
<g >
<title>w2c_decode__webp__wasm_VE4_C (924,016 samples, 0.06%)</title><rect x="1185.5" y="293" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1188.55" y="303.5" ></text>
</g>
<g >
<title>do_mas_munmap (1,848,478 samples, 0.12%)</title><rect x="10.0" y="165" width="1.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,846,659 samples, 0.12%)</title><rect x="59.9" y="261" width="1.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="62.95" y="271.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_SimpleVFilter16_C (2,263,903 samples, 0.15%)</title><rect x="736.4" y="293" width="1.7" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="739.35" y="303.5" ></text>
</g>
<g >
<title>bprm_execve (131,205 samples, 0.01%)</title><rect x="1189.9" y="213" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1192.90" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (131,205 samples, 0.01%)</title><rect x="1189.9" y="261" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1192.90" y="271.5" ></text>
</g>
<g >
<title>handle_mm_fault (2,317,965 samples, 0.15%)</title><rect x="720.8" y="229" width="1.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="723.77" y="239.5" ></text>
</g>
<g >
<title>__libc_start_call_main (2,315,011 samples, 0.15%)</title><rect x="10.0" y="261" width="1.8" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>do_mas_align_munmap (1,848,478 samples, 0.12%)</title><rect x="10.0" y="149" width="1.5" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="13.00" y="159.5" ></text>
</g>
<g >
<title>__mprotect (1,846,659 samples, 0.12%)</title><rect x="59.9" y="293" width="1.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="62.95" y="303.5" ></text>
</g>
<g >
<title>perf_event_mmap (1,846,659 samples, 0.12%)</title><rect x="59.9" y="197" width="1.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="62.95" y="207.5" ></text>
</g>
<g >
<title>clear_page_rep (1,205,725 samples, 0.08%)</title><rect x="1184.6" y="133" width="0.9" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1187.60" y="143.5" ></text>
</g>
<g >
<title>mprotect_fixup (1,846,659 samples, 0.12%)</title><rect x="59.9" y="213" width="1.5" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="62.95" y="223.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,205,725 samples, 0.08%)</title><rect x="1184.6" y="229" width="0.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1187.60" y="239.5" ></text>
</g>
<g >
<title>clear_page_rep (924,189 samples, 0.06%)</title><rect x="668.0" y="133" width="0.8" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="671.03" y="143.5" ></text>
</g>
<g >
<title>padzero (352,110 samples, 0.02%)</title><rect x="11.8" y="181" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.82" y="191.5" ></text>
</g>
<g >
<title>decode_webp_was (1,504,091,594 samples, 99.99%)</title><rect x="10.0" y="309" width="1179.9" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="13.00" y="319.5" >decode_webp_was</text>
</g>
<g >
<title>w2c_decode__webp__wasm_HU4_C (3,694,647 samples, 0.25%)</title><rect x="554.7" y="293" width="2.9" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="557.67" y="303.5" ></text>
</g>
<g >
<title>perf-exec (131,205 samples, 0.01%)</title><rect x="1189.9" y="309" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1192.90" y="319.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_DC4_C (14,779,653 samples, 0.98%)</title><rect x="63.6" y="293" width="11.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="66.57" y="303.5" ></text>
</g>
<g >
<title>do_mprotect_pkey (1,846,659 samples, 0.12%)</title><rect x="59.9" y="229" width="1.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="62.95" y="239.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_TransformTwo_C (1,847,587 samples, 0.12%)</title><rect x="54.2" y="277" width="1.4" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="57.15" y="287.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_DC4_C (924,232 samples, 0.06%)</title><rect x="12.1" y="277" width="0.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="15.09" y="287.5" ></text>
</g>
<g >
<title>__handle_mm_fault (352,110 samples, 0.02%)</title><rect x="11.8" y="85" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="14.82" y="95.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (352,110 samples, 0.02%)</title><rect x="11.8" y="277" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="14.82" y="287.5" ></text>
</g>
<g >
<title>__alloc_pages (1,847,751 samples, 0.12%)</title><rect x="721.1" y="165" width="1.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="724.13" y="175.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_DC16_C (2,771,467 samples, 0.18%)</title><rect x="61.4" y="293" width="2.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="64.40" y="303.5" ></text>
</g>
<g >
<title>exc_page_fault (1,205,725 samples, 0.08%)</title><rect x="1184.6" y="261" width="0.9" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1187.60" y="271.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_HE4_C (2,771,427 samples, 0.18%)</title><rect x="551.8" y="293" width="2.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="554.77" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (131,205 samples, 0.01%)</title><rect x="1189.9" y="277" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1192.90" y="287.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (131,205 samples, 0.01%)</title><rect x="1189.9" y="229" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1192.90" y="239.5" ></text>
</g>
<g >
<title>page_remove_rmap (924,296 samples, 0.06%)</title><rect x="10.7" y="85" width="0.8" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="13.72" y="95.5" ></text>
</g>
<g >
<title>load_elf_binary (352,110 samples, 0.02%)</title><rect x="11.8" y="197" width="0.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="14.82" y="207.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,848,441 samples, 0.12%)</title><rect x="667.3" y="229" width="1.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="670.30" y="239.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_GetCoeffsFast (10,545,641 samples, 0.70%)</title><rect x="12.8" y="277" width="8.3" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="15.82" y="287.5" ></text>
</g>
<g >
<title>all (1,504,222,799 samples, 100%)</title><rect x="10.0" y="325" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_GetCoeffsFast (541,265,679 samples, 35.98%)</title><rect x="80.2" y="293" width="424.6" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="83.24" y="303.5" >w2c_decode__webp__wasm_GetCoeffsFast</text>
</g>
<g >
<title>w2c_decode__webp__wasm_TransformDCUV_C (2,772,029 samples, 0.18%)</title><rect x="47.6" y="277" width="2.2" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="50.63" y="287.5" ></text>
</g>
<g >
<title>__do_global_dtors_aux (2,315,011 samples, 0.15%)</title><rect x="10.0" y="277" width="1.8" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>__free_one_page (924,182 samples, 0.06%)</title><rect x="10.0" y="37" width="0.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="13.00" y="47.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_SimpleHFilter16_C (5,541,333 samples, 0.37%)</title><rect x="722.6" y="293" width="4.3" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="725.58" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_execve (352,110 samples, 0.02%)</title><rect x="11.8" y="245" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="14.82" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (1,848,478 samples, 0.12%)</title><rect x="10.0" y="197" width="1.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_SimpleVFilter16i_C (4,560,317 samples, 0.30%)</title><rect x="738.1" y="293" width="3.6" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="741.13" y="303.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_TransformUV_C (924,045 samples, 0.06%)</title><rect x="55.6" y="277" width="0.7" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="58.60" y="287.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_RD4_C (2,772,594 samples, 0.18%)</title><rect x="670.9" y="293" width="2.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="673.93" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,848,478 samples, 0.12%)</title><rect x="10.0" y="213" width="1.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_HE8uv_C (923,968 samples, 0.06%)</title><rect x="553.9" y="293" width="0.8" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="556.94" y="303.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (924,296 samples, 0.06%)</title><rect x="10.7" y="53" width="0.8" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="13.72" y="63.5" ></text>
</g>
<g >
<title>vma_alloc_folio (1,205,725 samples, 0.08%)</title><rect x="1184.6" y="197" width="0.9" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1187.60" y="207.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_TransformTwo_C (2,772,438 samples, 0.18%)</title><rect x="850.2" y="293" width="2.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="853.18" y="303.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,205,725 samples, 0.08%)</title><rect x="1184.6" y="213" width="0.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1187.60" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_execve (131,205 samples, 0.01%)</title><rect x="1189.9" y="245" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1192.90" y="255.5" ></text>
</g>
<g >
<title>begin_new_exec (131,205 samples, 0.01%)</title><rect x="1189.9" y="181" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1192.90" y="191.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_TransformOne_C (101,632,757 samples, 6.76%)</title><rect x="770.5" y="293" width="79.7" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="773.46" y="303.5" >w2c_decod..</text>
</g>
</g>
</svg>
