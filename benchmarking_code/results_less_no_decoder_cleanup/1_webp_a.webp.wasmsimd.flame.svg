<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="374" onload="init(evt)" viewBox="0 0 1200 374" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="374.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="357" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="357" > </text>
<g id="frames">
<g >
<title>w2c_decode__webp__wasmsimd_HFilter16_SSE2 (7,391,632 samples, 1.21%)</title><rect x="886.0" y="293" width="14.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="889.01" y="303.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_GetCoeffsAlt (231,030,915 samples, 37.75%)</title><rect x="342.8" y="293" width="445.4" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="345.77" y="303.5" >w2c_decode__webp__wasmsimd_GetCoeffsAlt</text>
</g>
<g >
<title>_compound_head (2,771,605 samples, 0.45%)</title><rect x="18.9" y="85" width="5.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="21.88" y="95.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (923,349 samples, 0.15%)</title><rect x="230.4" y="165" width="1.8" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="233.43" y="175.5" ></text>
</g>
<g >
<title>clear_page_rep (2,763,323 samples, 0.45%)</title><rect x="292.8" y="133" width="5.3" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="295.77" y="143.5" ></text>
</g>
<g >
<title>exc_page_fault (5,535,109 samples, 0.90%)</title><rect x="291.0" y="261" width="10.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="293.99" y="271.5" ></text>
</g>
<g >
<title>cgroup_rstat_flush_locked (923,901 samples, 0.15%)</title><rect x="24.2" y="85" width="1.8" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="27.23" y="95.5" ></text>
</g>
<g >
<title>__alloc_pages (3,686,682 samples, 0.60%)</title><rect x="292.8" y="165" width="7.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="295.77" y="175.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (477,544 samples, 0.08%)</title><rect x="26.9" y="229" width="0.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="29.90" y="239.5" ></text>
</g>
<g >
<title>folio_add_lru (1,845,806 samples, 0.30%)</title><rect x="205.5" y="197" width="3.6" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="208.50" y="207.5" ></text>
</g>
<g >
<title>__mem_cgroup_flush_stats (923,901 samples, 0.15%)</title><rect x="24.2" y="117" width="1.8" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="27.23" y="127.5" ></text>
</g>
<g >
<title>unmap_vmas (2,771,605 samples, 0.45%)</title><rect x="18.9" y="117" width="5.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="21.88" y="127.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_ExtractGreen_SSE2 (3,167,404 samples, 0.52%)</title><rect x="41.9" y="277" width="6.1" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="44.90" y="287.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (4,606,900 samples, 0.75%)</title><rect x="10.0" y="117" width="8.9" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="13.00" y="127.5" ></text>
</g>
<g >
<title>free_unref_page_list (2,764,411 samples, 0.45%)</title><rect x="11.8" y="69" width="5.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="14.78" y="79.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (114,581 samples, 0.02%)</title><rect x="26.9" y="149" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="29.90" y="159.5" ></text>
</g>
<g >
<title>__mod_node_page_state (921,802 samples, 0.15%)</title><rect x="10.0" y="53" width="1.8" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="13.00" y="63.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_HE4_C (1,847,615 samples, 0.30%)</title><rect x="55.9" y="277" width="3.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="58.88" y="287.5" ></text>
</g>
<g >
<title>__handle_mm_fault (17,546,923 samples, 2.87%)</title><rect x="194.8" y="213" width="33.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="197.81" y="223.5" >__..</text>
</g>
<g >
<title>kfree (362,963 samples, 0.06%)</title><rect x="27.1" y="181" width="0.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="30.13" y="191.5" ></text>
</g>
<g >
<title>perf_event_comm (114,581 samples, 0.02%)</title><rect x="26.9" y="165" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="29.90" y="175.5" ></text>
</g>
<g >
<title>mem_cgroup_update_lru_size (920,687 samples, 0.15%)</title><rect x="17.1" y="69" width="1.8" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="20.11" y="79.5" ></text>
</g>
<g >
<title>n_tty_write (464,957 samples, 0.08%)</title><rect x="26.0" y="181" width="0.9" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="29.01" y="191.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_VFilter16_SSE2 (2,771,892 samples, 0.45%)</title><rect x="1147.7" y="293" width="5.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1150.66" y="303.5" ></text>
</g>
<g >
<title>balance_dirty_pages (923,901 samples, 0.15%)</title><rect x="24.2" y="149" width="1.8" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="27.23" y="159.5" ></text>
</g>
<g >
<title>handle_mm_fault (17,546,923 samples, 2.87%)</title><rect x="194.8" y="229" width="33.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="197.81" y="239.5" >ha..</text>
</g>
<g >
<title>file_tty_write.constprop.0 (464,957 samples, 0.08%)</title><rect x="26.0" y="197" width="0.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="29.01" y="207.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_UpsampleRgbaLinePair_SSE2 (28,420,651 samples, 4.64%)</title><rect x="1092.9" y="293" width="54.8" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1095.86" y="303.5" >w2c_d..</text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_HU4_C (924,030 samples, 0.15%)</title><rect x="61.2" y="277" width="1.8" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="64.22" y="287.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_DC4_C (4,525,812 samples, 0.74%)</title><rect x="31.4" y="277" width="8.7" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="34.39" y="287.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_DC8uv_SSE2 (5,541,259 samples, 0.91%)</title><rect x="237.6" y="293" width="10.6" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="240.56" y="303.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (2,771,722 samples, 0.45%)</title><rect x="198.4" y="197" width="5.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="201.38" y="207.5" ></text>
</g>
<g >
<title>get_page_from_freelist (3,686,682 samples, 0.60%)</title><rect x="292.8" y="149" width="7.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="295.77" y="159.5" ></text>
</g>
<g >
<title>do_user_addr_fault (17,546,923 samples, 2.87%)</title><rect x="194.8" y="245" width="33.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="197.81" y="255.5" >do..</text>
</g>
<g >
<title>asm_exc_page_fault (6,458,535 samples, 1.06%)</title><rect x="289.2" y="277" width="12.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="292.21" y="287.5" ></text>
</g>
<g >
<title>bprm_execve (477,544 samples, 0.08%)</title><rect x="26.9" y="213" width="0.9" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="29.90" y="223.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_dlmalloc (923,663 samples, 0.15%)</title><rect x="1188.2" y="293" width="1.7" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1191.16" y="303.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_VFilter16i_SSE2 (1,846,865 samples, 0.30%)</title><rect x="1153.0" y="293" width="3.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1156.00" y="303.5" ></text>
</g>
<g >
<title>__libc_start_call_main (7,378,505 samples, 1.21%)</title><rect x="10.0" y="261" width="14.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_BuildHuffmanTable (1,848,096 samples, 0.30%)</title><rect x="232.2" y="293" width="3.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="235.21" y="303.5" ></text>
</g>
<g >
<title>check_preemption_disabled (923,663 samples, 0.15%)</title><rect x="1188.2" y="149" width="1.7" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1191.16" y="159.5" ></text>
</g>
<g >
<title>charge_memcg (2,771,722 samples, 0.45%)</title><rect x="198.4" y="181" width="5.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="201.38" y="191.5" ></text>
</g>
<g >
<title>__mod_node_page_state (921,597 samples, 0.15%)</title><rect x="207.3" y="133" width="1.8" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="210.28" y="143.5" ></text>
</g>
<g >
<title>do_syscall_64 (477,544 samples, 0.08%)</title><rect x="26.9" y="261" width="0.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="29.90" y="271.5" ></text>
</g>
<g >
<title>exc_page_fault (17,546,923 samples, 2.87%)</title><rect x="194.8" y="261" width="33.8" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="197.81" y="271.5" >ex..</text>
</g>
<g >
<title>do_user_addr_fault (5,535,109 samples, 0.90%)</title><rect x="291.0" y="245" width="10.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="293.99" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (7,378,505 samples, 1.21%)</title><rect x="10.0" y="197" width="14.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned (924,108 samples, 0.15%)</title><rect x="182.3" y="293" width="1.8" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="185.35" y="303.5" ></text>
</g>
<g >
<title>mprotect_fixup (923,349 samples, 0.15%)</title><rect x="230.4" y="213" width="1.8" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="233.43" y="223.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_TM4_SSE2 (3,695,275 samples, 0.60%)</title><rect x="114.7" y="277" width="7.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="117.66" y="287.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_VFilter8_SSE2 (5,303,692 samples, 0.87%)</title><rect x="1156.6" y="293" width="10.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1159.56" y="303.5" ></text>
</g>
<g >
<title>check_new_pages (923,561 samples, 0.15%)</title><rect x="226.9" y="117" width="1.7" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="229.87" y="127.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_DecodeImageData (27,704,919 samples, 4.53%)</title><rect x="248.2" y="293" width="53.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="251.24" y="303.5" >w2c_d..</text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_VR4_SSE2 (1,848,659 samples, 0.30%)</title><rect x="178.8" y="277" width="3.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="181.78" y="287.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_EmitFancyRGB (924,476 samples, 0.15%)</title><rect x="336.5" y="293" width="1.8" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="339.53" y="303.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (924,347 samples, 0.15%)</title><rect x="291.0" y="197" width="1.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="293.99" y="207.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_GetLargeValue (50,714,291 samples, 8.29%)</title><rect x="788.2" y="293" width="97.8" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="791.23" y="303.5" >w2c_decode_..</text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_DC16NoTop_SSE2 (924,088 samples, 0.15%)</title><rect x="29.6" y="277" width="1.8" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="32.61" y="287.5" ></text>
</g>
<g >
<title>__folio_alloc (3,686,682 samples, 0.60%)</title><rect x="292.8" y="181" width="7.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="295.77" y="191.5" ></text>
</g>
<g >
<title>check_preemption_disabled (924,418 samples, 0.15%)</title><rect x="201.9" y="149" width="1.8" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="204.94" y="159.5" ></text>
</g>
<g >
<title>__handle_mm_fault (923,663 samples, 0.15%)</title><rect x="1188.2" y="213" width="1.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1191.16" y="223.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_TransformAC3_C (3,695,409 samples, 0.60%)</title><rect x="1085.7" y="293" width="7.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1088.73" y="303.5" ></text>
</g>
<g >
<title>__free_one_page (2,764,411 samples, 0.45%)</title><rect x="11.8" y="37" width="5.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="14.78" y="47.5" ></text>
</g>
<g >
<title>folio_batch_move_lru (1,845,806 samples, 0.30%)</title><rect x="205.5" y="181" width="3.6" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="208.50" y="191.5" ></text>
</g>
<g >
<title>do_mas_munmap (7,378,505 samples, 1.21%)</title><rect x="10.0" y="165" width="14.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_FinishRow (2,312,865 samples, 0.38%)</title><rect x="338.3" y="293" width="4.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="341.31" y="303.5" ></text>
</g>
<g >
<title>unmap_page_range (2,771,605 samples, 0.45%)</title><rect x="18.9" y="101" width="5.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="21.88" y="111.5" ></text>
</g>
<g >
<title>__x64_sys_mprotect (923,349 samples, 0.15%)</title><rect x="230.4" y="245" width="1.8" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="233.43" y="255.5" ></text>
</g>
<g >
<title>cgroup_rstat_flush_irqsafe (923,901 samples, 0.15%)</title><rect x="24.2" y="101" width="1.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="27.23" y="111.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_IDecode (74,155,268 samples, 12.12%)</title><rect x="926.9" y="293" width="142.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="929.87" y="303.5" >w2c_decode__webp__..</text>
</g>
<g >
<title>perf_iterate_sb (923,349 samples, 0.15%)</title><rect x="230.4" y="181" width="1.8" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="233.43" y="191.5" ></text>
</g>
<g >
<title>mem_cgroup_wb_stats (923,901 samples, 0.15%)</title><rect x="24.2" y="133" width="1.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="27.23" y="143.5" ></text>
</g>
<g >
<title>exc_page_fault (923,663 samples, 0.15%)</title><rect x="1188.2" y="261" width="1.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1191.16" y="271.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_HFilter8_SSE2 (5,484,617 samples, 0.90%)</title><rect x="909.2" y="293" width="10.5" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="912.17" y="303.5" ></text>
</g>
<g >
<title>rmqueue_bulk (3,694,028 samples, 0.60%)</title><rect x="221.5" y="133" width="7.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="224.52" y="143.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (923,901 samples, 0.15%)</title><rect x="24.2" y="197" width="1.8" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="27.23" y="207.5" ></text>
</g>
<g >
<title>decode_webp_was (611,964,056 samples, 100.00%)</title><rect x="10.0" y="309" width="1179.9" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="13.00" y="319.5" >decode_webp_was</text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_GetCoeffsAlt (4,084,043 samples, 0.67%)</title><rect x="48.0" y="277" width="7.9" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="51.00" y="287.5" ></text>
</g>
<g >
<title>check_preemption_disabled (921,802 samples, 0.15%)</title><rect x="10.0" y="37" width="1.8" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="13.00" y="47.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (924,380 samples, 0.15%)</title><rect x="228.6" y="245" width="1.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="231.65" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (7,378,505 samples, 1.21%)</title><rect x="10.0" y="213" width="14.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7,378,505 samples, 1.21%)</title><rect x="10.0" y="229" width="14.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (923,663 samples, 0.15%)</title><rect x="1188.2" y="277" width="1.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1191.16" y="287.5" ></text>
</g>
<g >
<title>try_charge_memcg (1,847,611 samples, 0.30%)</title><rect x="200.2" y="165" width="3.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="203.16" y="175.5" ></text>
</g>
<g >
<title>unmap_region (7,378,505 samples, 1.21%)</title><rect x="10.0" y="133" width="14.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="13.00" y="143.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_TransformDC_C (2,770,135 samples, 0.45%)</title><rect x="123.6" y="277" width="5.3" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="126.57" y="287.5" ></text>
</g>
<g >
<title>_raw_spin_lock (923,131 samples, 0.15%)</title><rect x="203.7" y="197" width="1.8" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="206.72" y="207.5" ></text>
</g>
<g >
<title>handle_mm_fault (923,663 samples, 0.15%)</title><rect x="1188.2" y="229" width="1.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1191.16" y="239.5" ></text>
</g>
<g >
<title>perf_event_mmap (923,349 samples, 0.15%)</title><rect x="230.4" y="197" width="1.8" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="233.43" y="207.5" ></text>
</g>
<g >
<title>do_user_addr_fault (923,663 samples, 0.15%)</title><rect x="1188.2" y="245" width="1.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1191.16" y="255.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_DC16_SSE2 (924,277 samples, 0.15%)</title><rect x="235.8" y="293" width="1.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="238.77" y="303.5" ></text>
</g>
<g >
<title>__do_global_dtors_aux (7,378,505 samples, 1.21%)</title><rect x="10.0" y="277" width="14.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_IDecode (5,543,010 samples, 0.91%)</title><rect x="63.0" y="277" width="10.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="66.00" y="287.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_VP8LReadBits (5,542,827 samples, 0.91%)</title><rect x="1173.9" y="293" width="10.7" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="1176.91" y="303.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_LD4_SSE2 (923,969 samples, 0.15%)</title><rect x="73.7" y="277" width="1.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="76.69" y="287.5" ></text>
</g>
<g >
<title>all (611,993,438 samples, 100%)</title><rect x="10.0" y="325" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (4,606,900 samples, 0.75%)</title><rect x="10.0" y="101" width="8.9" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="13.00" y="111.5" ></text>
</g>
<g >
<title>vma_alloc_folio (3,686,682 samples, 0.60%)</title><rect x="292.8" y="197" width="7.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="295.77" y="207.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (2,764,411 samples, 0.45%)</title><rect x="11.8" y="53" width="5.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="14.78" y="63.5" ></text>
</g>
<g >
<title>release_pages (4,606,900 samples, 0.75%)</title><rect x="10.0" y="85" width="8.9" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="13.00" y="95.5" ></text>
</g>
<g >
<title>blk_cgroup_congested (923,465 samples, 0.15%)</title><rect x="196.6" y="181" width="1.8" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="199.60" y="191.5" ></text>
</g>
<g >
<title>handle_mm_fault (5,535,109 samples, 0.90%)</title><rect x="291.0" y="229" width="10.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="293.99" y="239.5" ></text>
</g>
<g >
<title>__cgroup_throttle_swaprate (1,847,639 samples, 0.30%)</title><rect x="194.8" y="197" width="3.6" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="197.81" y="207.5" ></text>
</g>
<g >
<title>load_elf_binary (477,544 samples, 0.08%)</title><rect x="26.9" y="197" width="0.9" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="29.90" y="207.5" ></text>
</g>
<g >
<title>[unknown] (89,386,599 samples, 14.61%)</title><rect x="10.0" y="293" width="172.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="303.5" >[unknown]</text>
</g>
<g >
<title>lru_add_fn (1,845,806 samples, 0.30%)</title><rect x="205.5" y="165" width="3.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="208.50" y="175.5" ></text>
</g>
<g >
<title>generic_perform_write (923,901 samples, 0.15%)</title><rect x="24.2" y="181" width="1.8" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="27.23" y="191.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_TransformUV_C (2,770,269 samples, 0.45%)</title><rect x="128.9" y="277" width="5.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="131.91" y="287.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (921,802 samples, 0.15%)</title><rect x="10.0" y="69" width="1.8" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="13.00" y="79.5" ></text>
</g>
<g >
<title>mem_cgroup_from_task (924,080 samples, 0.15%)</title><rect x="299.9" y="213" width="1.8" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="302.88" y="223.5" ></text>
</g>
<g >
<title>charge_memcg (924,347 samples, 0.15%)</title><rect x="291.0" y="181" width="1.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="293.99" y="191.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_TransformAC3_C (923,774 samples, 0.15%)</title><rect x="121.8" y="277" width="1.8" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="124.79" y="287.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_HFilter16i_SSE2 (4,617,628 samples, 0.75%)</title><rect x="900.3" y="293" width="8.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="903.26" y="303.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_VP8GetValue (2,772,076 samples, 0.45%)</title><rect x="1166.8" y="293" width="5.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1169.79" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (477,544 samples, 0.08%)</title><rect x="26.9" y="277" width="0.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="29.90" y="287.5" ></text>
</g>
<g >
<title>vma_alloc_folio (10,158,625 samples, 1.66%)</title><rect x="209.1" y="197" width="19.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="212.06" y="207.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,388,858 samples, 0.23%)</title><rect x="24.2" y="245" width="2.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="27.23" y="255.5" ></text>
</g>
<g >
<title>__list_del_entry_valid (923,359 samples, 0.15%)</title><rect x="298.1" y="117" width="1.8" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="301.10" y="127.5" ></text>
</g>
<g >
<title>vfs_write (1,388,858 samples, 0.23%)</title><rect x="24.2" y="213" width="2.7" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="27.23" y="223.5" ></text>
</g>
<g >
<title>balance_dirty_pages_ratelimited_flags (923,901 samples, 0.15%)</title><rect x="24.2" y="165" width="1.8" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="27.23" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (923,349 samples, 0.15%)</title><rect x="230.4" y="277" width="1.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="233.43" y="287.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_TM16_SSE2 (2,771,739 samples, 0.45%)</title><rect x="109.3" y="277" width="5.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="112.32" y="287.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_EmitAlphaRGB (924,001 samples, 0.15%)</title><rect x="334.7" y="293" width="1.8" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="337.75" y="303.5" ></text>
</g>
<g >
<title>__libc_write (1,388,858 samples, 0.23%)</title><rect x="24.2" y="277" width="2.7" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="27.23" y="287.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (923,663 samples, 0.15%)</title><rect x="1188.2" y="197" width="1.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1191.16" y="207.5" ></text>
</g>
<g >
<title>__alloc_pages (10,158,625 samples, 1.66%)</title><rect x="209.1" y="165" width="19.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="212.06" y="175.5" ></text>
</g>
<g >
<title>__munmap (7,378,505 samples, 1.21%)</title><rect x="10.0" y="245" width="14.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_ReconstructRow (8,238,372 samples, 1.35%)</title><rect x="1069.8" y="293" width="15.9" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1072.85" y="303.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_Transform_SSE2 (21,249,591 samples, 3.47%)</title><rect x="134.3" y="277" width="40.9" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="137.25" y="287.5" >w2c..</text>
</g>
<g >
<title>asm_exc_page_fault (395,952 samples, 0.06%)</title><rect x="47.2" y="261" width="0.8" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="50.24" y="271.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_HE8uv_C (923,505 samples, 0.15%)</title><rect x="59.4" y="277" width="1.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="62.44" y="287.5" ></text>
</g>
<g >
<title>ksys_write (1,388,858 samples, 0.23%)</title><rect x="24.2" y="229" width="2.7" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="27.23" y="239.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_ReconstructRow (17,553,325 samples, 2.87%)</title><rect x="75.5" y="277" width="33.8" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="78.47" y="287.5" >w2..</text>
</g>
<g >
<title>__mprotect (923,349 samples, 0.15%)</title><rect x="230.4" y="293" width="1.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="233.43" y="303.5" ></text>
</g>
<g >
<title>do_mprotect_pkey (923,349 samples, 0.15%)</title><rect x="230.4" y="229" width="1.8" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="233.43" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,388,858 samples, 0.23%)</title><rect x="24.2" y="261" width="2.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="27.23" y="271.5" ></text>
</g>
<g >
<title>__list_del_entry_valid (2,770,467 samples, 0.45%)</title><rect x="221.5" y="117" width="5.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="224.52" y="127.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_DispatchAlpha_SSE2 (17,161,719 samples, 2.80%)</title><rect x="301.7" y="293" width="33.0" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="304.66" y="303.5" >w2..</text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_DecodeImageData (924,061 samples, 0.15%)</title><rect x="40.1" y="277" width="1.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="43.11" y="287.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_VE4_SSE2 (1,847,495 samples, 0.30%)</title><rect x="175.2" y="277" width="3.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="178.22" y="287.5" ></text>
</g>
<g >
<title>charge_memcg (923,663 samples, 0.15%)</title><rect x="1188.2" y="181" width="1.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1191.16" y="191.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_VP8ParseProba (1,847,548 samples, 0.30%)</title><rect x="1184.6" y="293" width="3.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1187.60" y="303.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (924,380 samples, 0.15%)</title><rect x="228.6" y="261" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="231.65" y="271.5" ></text>
</g>
<g >
<title>memcg_check_events (923,663 samples, 0.15%)</title><rect x="1188.2" y="165" width="1.7" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1191.16" y="175.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (19,394,390 samples, 3.17%)</title><rect x="193.0" y="277" width="37.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="196.03" y="287.5" >asm..</text>
</g>
<g >
<title>rmqueue_bulk (923,359 samples, 0.15%)</title><rect x="298.1" y="133" width="1.8" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="301.10" y="143.5" ></text>
</g>
<g >
<title>do_mas_align_munmap (7,378,505 samples, 1.21%)</title><rect x="10.0" y="149" width="14.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="13.00" y="159.5" ></text>
</g>
<g >
<title>do_syscall_64 (923,349 samples, 0.15%)</title><rect x="230.4" y="261" width="1.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="233.43" y="271.5" ></text>
</g>
<g >
<title>__handle_mm_fault (4,611,029 samples, 0.75%)</title><rect x="291.0" y="213" width="8.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="293.99" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_execve (477,544 samples, 0.08%)</title><rect x="26.9" y="245" width="0.9" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="29.90" y="255.5" ></text>
</g>
<g >
<title>down_read (464,957 samples, 0.08%)</title><rect x="26.0" y="165" width="0.9" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="29.01" y="175.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_BuildHuffmanTable (923,893 samples, 0.15%)</title><rect x="27.8" y="277" width="1.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="30.83" y="287.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_VP8LDoFillBitWindow (923,211 samples, 0.15%)</title><rect x="1172.1" y="293" width="1.8" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1175.13" y="303.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (24,012,504 samples, 3.92%)</title><rect x="184.1" y="293" width="46.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="187.13" y="303.5" >__me..</text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_HFilter8i_SSE2 (3,695,327 samples, 0.60%)</title><rect x="919.7" y="293" width="7.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="922.74" y="303.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (921,597 samples, 0.15%)</title><rect x="207.3" y="149" width="1.8" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="210.28" y="159.5" ></text>
</g>
<g >
<title>__folio_alloc (10,158,625 samples, 1.66%)</title><rect x="209.1" y="181" width="19.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="212.06" y="191.5" ></text>
</g>
<g >
<title>get_page_from_freelist (10,158,625 samples, 1.66%)</title><rect x="209.1" y="149" width="19.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="212.06" y="159.5" ></text>
</g>
<g >
<title>begin_new_exec (114,581 samples, 0.02%)</title><rect x="26.9" y="181" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="29.90" y="191.5" ></text>
</g>
<g >
<title>clear_page_rep (6,464,597 samples, 1.06%)</title><rect x="209.1" y="133" width="12.4" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="212.06" y="143.5" ></text>
</g>
<g >
<title>__vm_munmap (7,378,505 samples, 1.21%)</title><rect x="10.0" y="181" width="14.2" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
</g>
</svg>
