<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="310" onload="init(evt)" viewBox="0 0 1200 310" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="310.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="293" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="293" > </text>
<g id="frames">
<g >
<title>w2c_decode__webp__wasm_TransformDCUV_C (4,618,925 samples, 0.31%)</title><rect x="36.0" y="213" width="3.6" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="39.01" y="223.5" ></text>
</g>
<g >
<title>do_user_addr_fault (456,707 samples, 0.03%)</title><rect x="10.0" y="149" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="13.00" y="159.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (404,806 samples, 0.03%)</title><rect x="688.9" y="213" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="691.87" y="223.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1,846,952 samples, 0.12%)</title><rect x="44.7" y="229" width="1.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="47.73" y="239.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_GetCoeffsFast (569,292,687 samples, 38.04%)</title><rect x="65.1" y="229" width="448.9" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="68.09" y="239.5" >w2c_decode__webp__wasm_GetCoeffsFast</text>
</g>
<g >
<title>w2c_decode__webp__wasm_TransformDC_C (12,892,659 samples, 0.86%)</title><rect x="771.4" y="229" width="10.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="774.39" y="239.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_HU4_C (3,693,588 samples, 0.25%)</title><rect x="569.8" y="229" width="2.9" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="572.83" y="239.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_FinishRow (922,809 samples, 0.06%)</title><rect x="64.4" y="229" width="0.7" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="67.36" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (451,635 samples, 0.03%)</title><rect x="10.4" y="213" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.36" y="223.5" ></text>
</g>
<g >
<title>do_fault (456,707 samples, 0.03%)</title><rect x="10.0" y="101" width="0.4" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="13.00" y="111.5" ></text>
</g>
<g >
<title>decode_webp_was (1,496,468,609 samples, 100.00%)</title><rect x="10.0" y="245" width="1180.0" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >decode_webp_was</text>
</g>
<g >
<title>w2c_decode__webp__wasm_HE4_C (5,543,963 samples, 0.37%)</title><rect x="564.0" y="229" width="4.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="567.01" y="239.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_DC4_C (12,009,154 samples, 0.80%)</title><rect x="50.6" y="229" width="9.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="53.55" y="239.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (404,806 samples, 0.03%)</title><rect x="688.9" y="133" width="0.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="691.87" y="143.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (404,806 samples, 0.03%)</title><rect x="688.9" y="197" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="691.87" y="207.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_HD4_C (4,619,426 samples, 0.31%)</title><rect x="560.4" y="229" width="3.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="563.37" y="239.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (404,806 samples, 0.03%)</title><rect x="688.9" y="181" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="691.87" y="191.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_VP8ParseProba (924,310 samples, 0.06%)</title><rect x="1187.8" y="229" width="0.7" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1190.79" y="239.5" ></text>
</g>
<g >
<title>__vfprintf_internal (923,710 samples, 0.06%)</title><rect x="48.4" y="229" width="0.7" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="51.37" y="239.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_TransformAC3_C (10,159,221 samples, 0.68%)</title><rect x="763.4" y="229" width="8.0" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="766.38" y="239.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_GetCoeffsFast (12,934,148 samples, 0.86%)</title><rect x="10.7" y="213" width="10.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="13.72" y="223.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_RD4_C (1,847,059 samples, 0.12%)</title><rect x="690.6" y="229" width="1.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="693.65" y="239.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_ReconstructRow (8,314,774 samples, 0.56%)</title><rect x="29.4" y="213" width="6.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="32.45" y="223.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_DC8uv_C (5,505,474 samples, 0.37%)</title><rect x="60.0" y="229" width="4.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="63.02" y="239.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_SimpleHFilter16_C (3,695,151 samples, 0.25%)</title><rect x="737.2" y="229" width="2.9" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="740.16" y="239.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_CustomPut (924,319 samples, 0.06%)</title><rect x="49.1" y="229" width="0.7" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="52.09" y="239.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (345,766 samples, 0.02%)</title><rect x="10.4" y="37" width="0.3" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="13.44" y="47.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_SimpleVFilter16_C (3,693,632 samples, 0.25%)</title><rect x="748.8" y="229" width="2.9" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="751.81" y="239.5" ></text>
</g>
<g >
<title>load_elf_binary (451,635 samples, 0.03%)</title><rect x="10.4" y="133" width="0.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="13.36" y="143.5" ></text>
</g>
<g >
<title>set_brk (345,766 samples, 0.02%)</title><rect x="10.4" y="117" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="13.44" y="127.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_SimpleHFilter16i_C (11,080,097 samples, 0.74%)</title><rect x="740.1" y="229" width="8.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="743.07" y="239.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_TM16_C (1,847,564 samples, 0.12%)</title><rect x="760.5" y="229" width="1.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="763.46" y="239.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_TransformWHT_C (923,615 samples, 0.06%)</title><rect x="861.4" y="229" width="0.7" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="864.37" y="239.5" ></text>
</g>
<g >
<title>bprm_execve (451,635 samples, 0.03%)</title><rect x="10.4" y="149" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="13.36" y="159.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_SimpleVFilter16i_C (11,087,539 samples, 0.74%)</title><rect x="751.7" y="229" width="8.8" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="754.72" y="239.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_HE8uv_C (1,837,092 samples, 0.12%)</title><rect x="568.4" y="229" width="1.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="571.38" y="239.5" ></text>
</g>
<g >
<title>__handle_mm_fault (456,707 samples, 0.03%)</title><rect x="10.0" y="117" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="13.00" y="127.5" ></text>
</g>
<g >
<title>perf_iterate_sb (345,766 samples, 0.02%)</title><rect x="10.4" y="53" width="0.3" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="13.44" y="63.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_IDecode (147,687,874 samples, 9.87%)</title><rect x="572.7" y="229" width="116.5" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="575.74" y="239.5" >w2c_decode__we..</text>
</g>
<g >
<title>exc_page_fault (456,707 samples, 0.03%)</title><rect x="10.0" y="165" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>all (1,496,495,672 samples, 100%)</title><rect x="10.0" y="261" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>[unknown] (456,707 samples, 0.03%)</title><rect x="10.0" y="213" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_IDecode (10,823,773 samples, 0.72%)</title><rect x="20.9" y="213" width="8.5" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="23.91" y="223.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_VR4_C (1,848,188 samples, 0.12%)</title><rect x="1188.5" y="229" width="1.5" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1191.52" y="239.5" ></text>
</g>
<g >
<title>_dl_non_dynamic_init (456,707 samples, 0.03%)</title><rect x="10.0" y="197" width="0.4" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>[unknown] (44,038,841 samples, 2.94%)</title><rect x="10.0" y="229" width="34.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >[u..</text>
</g>
<g >
<title>__printf_fp_l (923,710 samples, 0.06%)</title><rect x="48.4" y="213" width="0.7" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="51.37" y="223.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_TransformOne_C (101,229,330 samples, 6.76%)</title><rect x="781.6" y="229" width="79.8" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="784.55" y="239.5" >w2c_decod..</text>
</g>
<g >
<title>asm_exc_page_fault (456,707 samples, 0.03%)</title><rect x="10.0" y="181" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (451,635 samples, 0.03%)</title><rect x="10.4" y="165" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="13.36" y="175.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_VP8GetValue (1,848,107 samples, 0.12%)</title><rect x="1186.3" y="229" width="1.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1189.34" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (451,635 samples, 0.03%)</title><rect x="10.4" y="197" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.36" y="207.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_VE4_C (2,770,520 samples, 0.19%)</title><rect x="1182.0" y="229" width="2.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1184.97" y="239.5" ></text>
</g>
<g >
<title>__do_fault (456,707 samples, 0.03%)</title><rect x="10.0" y="85" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="13.00" y="95.5" ></text>
</g>
<g >
<title>timerqueue_add (404,806 samples, 0.03%)</title><rect x="688.9" y="117" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="691.87" y="127.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_ReconstructRow (57,138,309 samples, 3.82%)</title><rect x="692.1" y="229" width="45.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="695.10" y="239.5" >w2c_..</text>
</g>
<g >
<title>__hrtimer_run_queues (404,806 samples, 0.03%)</title><rect x="688.9" y="149" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="691.87" y="159.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_DC16_C (924,069 samples, 0.06%)</title><rect x="49.8" y="229" width="0.8" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="52.82" y="239.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (404,806 samples, 0.03%)</title><rect x="688.9" y="165" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="691.87" y="175.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_UpsampleRgbaLinePair_C (405,655,881 samples, 27.11%)</title><rect x="862.1" y="229" width="319.9" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="865.10" y="239.5" >w2c_decode__webp__wasm_UpsampleRgbaLinePair_C</text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (2,770,570 samples, 0.19%)</title><rect x="46.2" y="229" width="2.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="49.18" y="239.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_GetLargeValue (58,823,775 samples, 3.93%)</title><rect x="514.0" y="229" width="46.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="516.98" y="239.5" >w2c_..</text>
</g>
<g >
<title>w2c_decode__webp__wasm_LD4_C (1,845,455 samples, 0.12%)</title><rect x="689.2" y="229" width="1.4" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="692.19" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_execve (451,635 samples, 0.03%)</title><rect x="10.4" y="181" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="13.36" y="191.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_TransformOne_C (1,848,535 samples, 0.12%)</title><rect x="43.3" y="213" width="1.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="46.27" y="223.5" ></text>
</g>
<g >
<title>handle_mm_fault (456,707 samples, 0.03%)</title><rect x="10.0" y="133" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="13.00" y="143.5" ></text>
</g>
<g >
<title>vm_brk_flags (345,766 samples, 0.02%)</title><rect x="10.4" y="101" width="0.3" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="13.44" y="111.5" ></text>
</g>
<g >
<title>perf_event_mmap (345,766 samples, 0.02%)</title><rect x="10.4" y="69" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="13.44" y="79.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_TransformDC_C (4,590,344 samples, 0.31%)</title><rect x="39.6" y="213" width="3.7" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="42.65" y="223.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_TM4_C (1,846,995 samples, 0.12%)</title><rect x="761.9" y="229" width="1.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="764.92" y="239.5" ></text>
</g>
<g >
<title>do_brk_flags (345,766 samples, 0.02%)</title><rect x="10.4" y="85" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="13.44" y="95.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasm_VL4_C (2,770,674 samples, 0.19%)</title><rect x="1184.2" y="229" width="2.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1187.15" y="239.5" ></text>
</g>
</g>
</svg>
