<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="390" onload="init(evt)" viewBox="0 0 1200 390" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="390.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="373" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="373" > </text>
<g id="frames">
<g >
<title>asm_exc_page_fault (757,035 samples, 0.10%)</title><rect x="1180.2" y="261" width="1.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1183.22" y="271.5" ></text>
</g>
<g >
<title>ext4_orphan_add (923,113 samples, 0.12%)</title><rect x="1181.4" y="133" width="1.4" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1184.39" y="143.5" ></text>
</g>
<g >
<title>__list_add_valid (757,035 samples, 0.10%)</title><rect x="1180.2" y="133" width="1.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1183.22" y="143.5" ></text>
</g>
<g >
<title>do_user_addr_fault (362,958 samples, 0.05%)</title><rect x="1185.8" y="133" width="0.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1188.83" y="143.5" ></text>
</g>
<g >
<title>scheduler_tick (871,373 samples, 0.11%)</title><rect x="498.7" y="165" width="1.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="501.74" y="175.5" ></text>
</g>
<g >
<title>UpsampleRgbLinePair_C (168,777,435 samples, 22.05%)</title><rect x="239.9" y="309" width="260.2" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="242.90" y="319.5" >UpsampleRgbLinePair_C</text>
</g>
<g >
<title>do_syscall_64 (475,331 samples, 0.06%)</title><rect x="1185.7" y="277" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1188.66" y="287.5" ></text>
</g>
<g >
<title>TransformDC_C (1,847,416 samples, 0.24%)</title><rect x="695.1" y="293" width="2.9" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="698.13" y="303.5" ></text>
</g>
<g >
<title>VP8LReadBits (924,111 samples, 0.12%)</title><rect x="1174.6" y="277" width="1.4" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1177.59" y="287.5" ></text>
</g>
<g >
<title>ext4_setattr (923,113 samples, 0.12%)</title><rect x="1181.4" y="149" width="1.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1184.39" y="159.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3,486,781 samples, 0.46%)</title><rect x="1176.0" y="277" width="5.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1179.01" y="287.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (871,373 samples, 0.11%)</title><rect x="498.7" y="277" width="1.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="501.74" y="287.5" ></text>
</g>
<g >
<title>do_filp_open (923,113 samples, 0.12%)</title><rect x="1181.4" y="213" width="1.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1184.39" y="223.5" ></text>
</g>
<g >
<title>notify_change (923,113 samples, 0.12%)</title><rect x="1181.4" y="165" width="1.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1184.39" y="175.5" ></text>
</g>
<g >
<title>VP8GetValue (1,750,406 samples, 0.23%)</title><rect x="567.6" y="309" width="2.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="570.60" y="319.5" ></text>
</g>
<g >
<title>_int_malloc (923,766 samples, 0.12%)</title><rect x="1184.2" y="293" width="1.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1187.23" y="303.5" ></text>
</g>
<g >
<title>LD4_C (1,847,265 samples, 0.24%)</title><rect x="207.4" y="309" width="2.8" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="210.39" y="319.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (923,054 samples, 0.12%)</title><rect x="1182.8" y="101" width="1.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1185.81" y="111.5" ></text>
</g>
<g >
<title>HFilter8_C (924,082 samples, 0.12%)</title><rect x="668.2" y="293" width="1.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="671.25" y="303.5" ></text>
</g>
<g >
<title>tick_sched_timer (871,373 samples, 0.11%)</title><rect x="498.7" y="213" width="1.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="501.74" y="223.5" ></text>
</g>
<g >
<title>GetCoeffsFast (923,853 samples, 0.12%)</title><rect x="146.0" y="309" width="1.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="148.98" y="319.5" ></text>
</g>
<g >
<title>__libc_open64 (923,113 samples, 0.12%)</title><rect x="1181.4" y="293" width="1.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1184.39" y="303.5" ></text>
</g>
<g >
<title>ReadHuffmanCodesHelper (892,271 samples, 0.12%)</title><rect x="1171.9" y="277" width="1.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1174.91" y="287.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (923,054 samples, 0.12%)</title><rect x="1182.8" y="213" width="1.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1185.81" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (923,113 samples, 0.12%)</title><rect x="1181.4" y="277" width="1.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1184.39" y="287.5" ></text>
</g>
<g >
<title>do_user_addr_fault (757,035 samples, 0.10%)</title><rect x="1180.2" y="229" width="1.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1183.22" y="239.5" ></text>
</g>
<g >
<title>exc_page_fault (757,035 samples, 0.10%)</title><rect x="1180.2" y="245" width="1.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1183.22" y="255.5" ></text>
</g>
<g >
<title>GetLargeValue (37,182,891 samples, 4.86%)</title><rect x="586.2" y="293" width="57.3" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="589.16" y="303.5" >GetLar..</text>
</g>
<g >
<title>decode_webp_nat (765,424,204 samples, 100.00%)</title><rect x="10.0" y="325" width="1180.0" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >decode_webp_nat</text>
</g>
<g >
<title>vfs_write (923,054 samples, 0.12%)</title><rect x="1182.8" y="229" width="1.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1185.81" y="239.5" ></text>
</g>
<g >
<title>perf_event_comm (112,373 samples, 0.01%)</title><rect x="1185.7" y="181" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1188.66" y="191.5" ></text>
</g>
<g >
<title>VFilter8i_C (1,847,378 samples, 0.24%)</title><rect x="553.4" y="309" width="2.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="556.45" y="319.5" ></text>
</g>
<g >
<title>do_truncate (923,113 samples, 0.12%)</title><rect x="1181.4" y="181" width="1.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1184.39" y="191.5" ></text>
</g>
<g >
<title>IDecode (923,488 samples, 0.12%)</title><rect x="675.4" y="293" width="1.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="678.37" y="303.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (871,373 samples, 0.11%)</title><rect x="498.7" y="261" width="1.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="501.74" y="271.5" ></text>
</g>
<g >
<title>HU4_C (1,799,631 samples, 0.24%)</title><rect x="204.6" y="309" width="2.8" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="207.61" y="319.5" ></text>
</g>
<g >
<title>VP8ParseProba (1,847,183 samples, 0.24%)</title><rect x="575.9" y="309" width="2.8" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="578.88" y="319.5" ></text>
</g>
<g >
<title>filemap_add_folio (923,054 samples, 0.12%)</title><rect x="1182.8" y="133" width="1.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1185.81" y="143.5" ></text>
</g>
<g >
<title>begin_new_exec (112,373 samples, 0.01%)</title><rect x="1185.7" y="197" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1188.66" y="207.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (362,958 samples, 0.05%)</title><rect x="1185.8" y="165" width="0.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1188.83" y="175.5" ></text>
</g>
<g >
<title>DC8uv_C (865,147 samples, 0.11%)</title><rect x="578.7" y="293" width="1.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="581.73" y="303.5" ></text>
</g>
<g >
<title>do_fault (362,958 samples, 0.05%)</title><rect x="1185.8" y="85" width="0.6" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1188.83" y="95.5" ></text>
</g>
<g >
<title>handle_mm_fault (362,958 samples, 0.05%)</title><rect x="1185.8" y="117" width="0.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1188.83" y="127.5" ></text>
</g>
<g >
<title>__handle_mm_fault (757,035 samples, 0.10%)</title><rect x="1180.2" y="197" width="1.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1183.22" y="207.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_statistics (923,054 samples, 0.12%)</title><rect x="1182.8" y="69" width="1.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1185.81" y="79.5" ></text>
</g>
<g >
<title>GetCoeffsFast (3,953,187 samples, 0.52%)</title><rect x="580.1" y="293" width="6.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="583.06" y="303.5" ></text>
</g>
<g >
<title>__count_memcg_events (923,054 samples, 0.12%)</title><rect x="1182.8" y="53" width="1.4" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1185.81" y="63.5" ></text>
</g>
<g >
<title>TransformDCUV_C (923,312 samples, 0.12%)</title><rect x="693.7" y="293" width="1.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="696.70" y="303.5" ></text>
</g>
<g >
<title>__handle_mm_fault (362,958 samples, 0.05%)</title><rect x="1185.8" y="101" width="0.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1188.83" y="111.5" ></text>
</g>
<g >
<title>update_process_times (871,373 samples, 0.11%)</title><rect x="498.7" y="181" width="1.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="501.74" y="191.5" ></text>
</g>
<g >
<title>TM16_C (7,320,460 samples, 0.96%)</title><rect x="682.4" y="293" width="11.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="685.42" y="303.5" ></text>
</g>
<g >
<title>TransformTwo_C (923,122 samples, 0.12%)</title><rect x="238.5" y="309" width="1.4" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="241.48" y="319.5" ></text>
</g>
<g >
<title>do_sys_openat2 (923,113 samples, 0.12%)</title><rect x="1181.4" y="229" width="1.4" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1184.39" y="239.5" ></text>
</g>
<g >
<title>path_openat (923,113 samples, 0.12%)</title><rect x="1181.4" y="197" width="1.4" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1184.39" y="207.5" ></text>
</g>
<g >
<title>exc_page_fault (362,958 samples, 0.05%)</title><rect x="1185.8" y="149" width="0.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1188.83" y="159.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (923,113 samples, 0.12%)</title><rect x="1181.4" y="117" width="1.4" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1184.39" y="127.5" ></text>
</g>
<g >
<title>folio_batch_move_lru (757,035 samples, 0.10%)</title><rect x="1180.2" y="165" width="1.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1183.22" y="175.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (871,373 samples, 0.11%)</title><rect x="498.7" y="293" width="1.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="501.74" y="303.5" ></text>
</g>
<g >
<title>HFilter8_C (1,829,154 samples, 0.24%)</title><rect x="200.4" y="309" width="2.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="203.37" y="319.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (923,054 samples, 0.12%)</title><rect x="1182.8" y="37" width="1.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1185.81" y="47.5" ></text>
</g>
<g >
<title>TransformOne_C (57,960,308 samples, 7.57%)</title><rect x="698.0" y="293" width="89.3" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="700.98" y="303.5" >TransformO..</text>
</g>
<g >
<title>[unknown] (191,236,485 samples, 24.98%)</title><rect x="886.6" y="293" width="294.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="889.58" y="303.5" >[unknown]</text>
</g>
<g >
<title>HFilter16_C (16,066,957 samples, 2.10%)</title><rect x="643.5" y="293" width="24.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="646.48" y="303.5" >H..</text>
</g>
<g >
<title>ShiftBytes (845,221 samples, 0.11%)</title><rect x="1173.3" y="277" width="1.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1176.28" y="287.5" ></text>
</g>
<g >
<title>clear_user_rep_good (362,958 samples, 0.05%)</title><rect x="1185.8" y="181" width="0.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1188.83" y="191.5" ></text>
</g>
<g >
<title>generic_perform_write (923,054 samples, 0.12%)</title><rect x="1182.8" y="197" width="1.4" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1185.81" y="207.5" ></text>
</g>
<g >
<title>copy_page (362,958 samples, 0.05%)</title><rect x="1185.8" y="69" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1188.83" y="79.5" ></text>
</g>
<g >
<title>perf_iterate_sb (112,373 samples, 0.01%)</title><rect x="1185.7" y="165" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1188.66" y="175.5" ></text>
</g>
<g >
<title>DecodeImageData (18,022,504 samples, 2.35%)</title><rect x="886.6" y="277" width="27.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="889.58" y="287.5" >D..</text>
</g>
<g >
<title>__filemap_get_folio (923,054 samples, 0.12%)</title><rect x="1182.8" y="149" width="1.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1185.81" y="159.5" ></text>
</g>
<g >
<title>__libc_write (923,054 samples, 0.12%)</title><rect x="1182.8" y="293" width="1.4" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1185.81" y="303.5" ></text>
</g>
<g >
<title>all (765,453,191 samples, 100%)</title><rect x="10.0" y="341" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (871,373 samples, 0.11%)</title><rect x="498.7" y="229" width="1.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="501.74" y="239.5" ></text>
</g>
<g >
<title>TransformDC_C (2,708,608 samples, 0.35%)</title><rect x="234.3" y="309" width="4.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="237.30" y="319.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1,845,427 samples, 0.24%)</title><rect x="1187.1" y="309" width="2.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1190.11" y="319.5" ></text>
</g>
<g >
<title>task_tick_fair (871,373 samples, 0.11%)</title><rect x="498.7" y="149" width="1.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="501.74" y="159.5" ></text>
</g>
<g >
<title>VL4_C (923,277 samples, 0.12%)</title><rect x="556.3" y="309" width="1.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="559.30" y="319.5" ></text>
</g>
<g >
<title>FilterLoop24_C (16,997,868 samples, 2.22%)</title><rect x="48.4" y="309" width="26.2" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="51.41" y="319.5" >F..</text>
</g>
<g >
<title>FilterLoop26_C (46,299,363 samples, 6.05%)</title><rect x="74.6" y="309" width="71.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="77.61" y="319.5" >FilterLo..</text>
</g>
<g >
<title>tick_sched_handle (871,373 samples, 0.11%)</title><rect x="498.7" y="197" width="1.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="501.74" y="207.5" ></text>
</g>
<g >
<title>VP8ParseIntraModeRow (3,624,724 samples, 0.47%)</title><rect x="570.3" y="309" width="5.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="573.29" y="319.5" ></text>
</g>
<g >
<title>VFilter16i_C (34,617,871 samples, 4.52%)</title><rect x="500.1" y="309" width="53.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="503.08" y="319.5" >VFilt..</text>
</g>
<g >
<title>bprm_execve (475,331 samples, 0.06%)</title><rect x="1185.7" y="229" width="0.7" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1188.66" y="239.5" ></text>
</g>
<g >
<title>ksys_write (923,054 samples, 0.12%)</title><rect x="1182.8" y="245" width="1.4" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1185.81" y="255.5" ></text>
</g>
<g >
<title>TransformUV_C (923,618 samples, 0.12%)</title><rect x="788.7" y="293" width="1.5" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="791.75" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (923,113 samples, 0.12%)</title><rect x="1181.4" y="261" width="1.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1184.39" y="271.5" ></text>
</g>
<g >
<title>GetLargeValue (923,219 samples, 0.12%)</title><rect x="1170.5" y="277" width="1.4" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1173.49" y="287.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (923,054 samples, 0.12%)</title><rect x="1182.8" y="181" width="1.4" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1185.81" y="191.5" ></text>
</g>
<g >
<title>HE4_C (1,835,684 samples, 0.24%)</title><rect x="149.4" y="309" width="2.9" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="152.44" y="319.5" ></text>
</g>
<g >
<title>HFilter8i_C (923,058 samples, 0.12%)</title><rect x="203.2" y="309" width="1.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="206.19" y="319.5" ></text>
</g>
<g >
<title>folio_add_lru (757,035 samples, 0.10%)</title><rect x="1180.2" y="181" width="1.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1183.22" y="191.5" ></text>
</g>
<g >
<title>update_load_avg (871,373 samples, 0.11%)</title><rect x="498.7" y="133" width="1.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="501.74" y="143.5" ></text>
</g>
<g >
<title>BuildHuffmanTable (3,240,865 samples, 0.42%)</title><rect x="10.0" y="309" width="5.0" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>__filemap_add_folio (923,054 samples, 0.12%)</title><rect x="1182.8" y="117" width="1.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1185.81" y="127.5" ></text>
</g>
<g >
<title>ExtractGreen_C (17,110,624 samples, 2.24%)</title><rect x="22.0" y="309" width="26.4" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="25.03" y="319.5" >E..</text>
</g>
<g >
<title>load_elf_binary (475,331 samples, 0.06%)</title><rect x="1185.7" y="213" width="0.7" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1188.66" y="223.5" ></text>
</g>
<g >
<title>pagecache_get_page (923,054 samples, 0.12%)</title><rect x="1182.8" y="165" width="1.4" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="1185.81" y="175.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (475,331 samples, 0.06%)</title><rect x="1185.7" y="245" width="0.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1188.66" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_execve (475,331 samples, 0.06%)</title><rect x="1185.7" y="261" width="0.7" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1188.66" y="271.5" ></text>
</g>
<g >
<title>ReconstructRow (8,228,653 samples, 1.08%)</title><rect x="210.2" y="309" width="12.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="213.23" y="319.5" ></text>
</g>
<g >
<title>padzero (362,958 samples, 0.05%)</title><rect x="1185.8" y="197" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1188.83" y="207.5" ></text>
</g>
<g >
<title>ReconstructRow (3,646,658 samples, 0.48%)</title><rect x="676.8" y="293" width="5.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="679.80" y="303.5" ></text>
</g>
<g >
<title>HD4_C (1,321,261 samples, 0.17%)</title><rect x="147.4" y="309" width="2.0" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="150.41" y="319.5" ></text>
</g>
<g >
<title>lru_add_fn (757,035 samples, 0.10%)</title><rect x="1180.2" y="149" width="1.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1183.22" y="159.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (475,331 samples, 0.06%)</title><rect x="1185.7" y="293" width="0.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1188.66" y="303.5" ></text>
</g>
<g >
<title>VP8DecodeMB (17,499,023 samples, 2.29%)</title><rect x="790.2" y="293" width="26.9" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="793.17" y="303.5" >V..</text>
</g>
<g >
<title>asm_exc_page_fault (467,820 samples, 0.06%)</title><rect x="1186.4" y="293" width="0.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1189.39" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_openat (923,113 samples, 0.12%)</title><rect x="1181.4" y="245" width="1.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1184.39" y="255.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (112,373 samples, 0.01%)</title><rect x="1185.7" y="149" width="0.1" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="1188.66" y="159.5" ></text>
</g>
<g >
<title>TransformAC3_C (2,775,073 samples, 0.36%)</title><rect x="230.0" y="309" width="4.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="233.02" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (923,054 samples, 0.12%)</title><rect x="1182.8" y="277" width="1.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1185.81" y="287.5" ></text>
</g>
<g >
<title>DC4_C (4,561,741 samples, 0.60%)</title><rect x="15.0" y="309" width="7.0" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="18.00" y="319.5" ></text>
</g>
<g >
<title>[unknown] (394,181,918 samples, 51.50%)</title><rect x="578.7" y="309" width="607.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="581.73" y="319.5" >[unknown]</text>
</g>
<g >
<title>do_syscall_64 (923,054 samples, 0.12%)</title><rect x="1182.8" y="261" width="1.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1185.81" y="271.5" ></text>
</g>
<g >
<title>HFilter16i_C (31,199,364 samples, 4.08%)</title><rect x="152.3" y="309" width="48.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="155.27" y="319.5" >HFil..</text>
</g>
<g >
<title>TransformTwo_C (922,768 samples, 0.12%)</title><rect x="787.3" y="293" width="1.4" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="790.33" y="303.5" ></text>
</g>
<g >
<title>GetCoeffsFast (166,142,378 samples, 21.71%)</title><rect x="914.4" y="277" width="256.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="917.36" y="287.5" >GetCoeffsFast</text>
</g>
<g >
<title>handle_mm_fault (757,035 samples, 0.10%)</title><rect x="1180.2" y="213" width="1.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1183.22" y="223.5" ></text>
</g>
<g >
<title>TM4_C (4,609,266 samples, 0.60%)</title><rect x="222.9" y="309" width="7.1" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="225.92" y="319.5" ></text>
</g>
<g >
<title>VP8DecodeMB (6,406,312 samples, 0.84%)</title><rect x="557.7" y="309" width="9.9" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="560.72" y="319.5" ></text>
</g>
<g >
<title>charge_memcg (923,054 samples, 0.12%)</title><rect x="1182.8" y="85" width="1.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1185.81" y="95.5" ></text>
</g>
<g >
<title>VP8ParseIntraModeRow (45,041,007 samples, 5.88%)</title><rect x="817.1" y="293" width="69.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="820.15" y="303.5" >VP8Pars..</text>
</g>
<g >
<title>__internal_atexit (467,820 samples, 0.06%)</title><rect x="1186.4" y="309" width="0.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1189.39" y="319.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (871,373 samples, 0.11%)</title><rect x="498.7" y="245" width="1.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="501.74" y="255.5" ></text>
</g>
<g >
<title>HFilter8i_C (3,699,847 samples, 0.48%)</title><rect x="669.7" y="293" width="5.7" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="672.67" y="303.5" ></text>
</g>
</g>
</svg>
