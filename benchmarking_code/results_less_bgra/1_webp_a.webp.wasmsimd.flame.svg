<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="294" onload="init(evt)" viewBox="0 0 1200 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="294.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="277" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="277" > </text>
<g id="frames">
<g >
<title>__install_special_mapping (361,394 samples, 0.06%)</title><rect x="11.2" y="85" width="0.8" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="14.22" y="95.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (459,722 samples, 0.08%)</title><rect x="10.0" y="181" width="1.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (924,224 samples, 0.17%)</title><rect x="175.5" y="181" width="1.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="178.49" y="191.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (924,224 samples, 0.17%)</title><rect x="175.5" y="213" width="1.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="178.49" y="223.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_GetCoeffsAlt (7,385,533 samples, 1.32%)</title><rect x="29.5" y="197" width="15.6" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="32.53" y="207.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_VFilter16i_SSE2 (1,847,901 samples, 0.33%)</title><rect x="1144.1" y="213" width="3.9" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1147.08" y="223.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_VP8ParseProba (4,616,538 samples, 0.83%)</title><rect x="1174.3" y="213" width="9.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1177.32" y="223.5" ></text>
</g>
<g >
<title>__folio_alloc (459,722 samples, 0.08%)</title><rect x="10.0" y="85" width="1.0" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="13.00" y="95.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_HFilter8i_SSE2 (923,836 samples, 0.17%)</title><rect x="878.8" y="213" width="2.0" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="881.81" y="223.5" ></text>
</g>
<g >
<title>decode_webp_was (558,363,445 samples, 99.99%)</title><rect x="10.0" y="229" width="1179.9" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >decode_webp_was</text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_DC8uv_SSE2 (922,992 samples, 0.17%)</title><rect x="21.7" y="197" width="2.0" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="24.73" y="207.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_VFilter8_SSE2 (3,686,073 samples, 0.66%)</title><rect x="1148.0" y="213" width="7.8" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1150.99" y="223.5" ></text>
</g>
<g >
<title>__perf_addr_filters_adjust (361,394 samples, 0.06%)</title><rect x="11.2" y="37" width="0.8" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="14.22" y="47.5" ></text>
</g>
<g >
<title>_int_malloc (459,722 samples, 0.08%)</title><rect x="10.0" y="197" width="1.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (884,161 samples, 0.16%)</title><rect x="1043.9" y="149" width="1.9" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1046.93" y="159.5" ></text>
</g>
<g >
<title>do_group_exit (924,224 samples, 0.17%)</title><rect x="175.5" y="165" width="1.9" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="178.49" y="175.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_memset (1,848,078 samples, 0.33%)</title><rect x="1186.0" y="213" width="3.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1189.03" y="223.5" ></text>
</g>
<g >
<title>bprm_execve (478,775 samples, 0.09%)</title><rect x="11.0" y="133" width="1.0" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="13.97" y="143.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_HFilter16i_SSE2 (5,542,089 samples, 0.99%)</title><rect x="862.4" y="213" width="11.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="865.43" y="223.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (478,775 samples, 0.09%)</title><rect x="11.0" y="149" width="1.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="13.97" y="159.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_TM4_SSE2 (3,695,799 samples, 0.66%)</title><rect x="92.0" y="197" width="7.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="94.98" y="207.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (785,811 samples, 0.14%)</title><rect x="169.9" y="197" width="1.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="172.93" y="207.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_UpsampleBgraLinePair_SSE2 (31,733,977 samples, 5.68%)</title><rect x="1075.1" y="213" width="67.0" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1078.07" y="223.5" >w2c_dec..</text>
</g>
<g >
<title>__alloc_pages (459,722 samples, 0.08%)</title><rect x="10.0" y="69" width="1.0" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="13.00" y="79.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1,848,412 samples, 0.33%)</title><rect x="171.6" y="213" width="3.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="174.59" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (924,224 samples, 0.17%)</title><rect x="175.5" y="197" width="1.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="178.49" y="207.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_RD4_SSE2 (923,470 samples, 0.17%)</title><rect x="64.7" y="197" width="1.9" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="67.66" y="207.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_HD4_C (1,848,635 samples, 0.33%)</title><rect x="45.1" y="197" width="3.9" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="48.14" y="207.5" ></text>
</g>
<g >
<title>load_elf_binary (478,775 samples, 0.09%)</title><rect x="11.0" y="117" width="1.0" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="13.97" y="127.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_HE8uv_C (2,229,348 samples, 0.40%)</title><rect x="854.0" y="213" width="4.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="857.03" y="223.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_HE4_C (924,028 samples, 0.17%)</title><rect x="49.0" y="197" width="2.0" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="52.05" y="207.5" ></text>
</g>
<g >
<title>exc_page_fault (459,722 samples, 0.08%)</title><rect x="10.0" y="165" width="1.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>flush_signal_handlers (117,381 samples, 0.02%)</title><rect x="11.0" y="85" width="0.2" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="13.97" y="95.5" ></text>
</g>
<g >
<title>__fput (924,224 samples, 0.17%)</title><rect x="175.5" y="117" width="1.9" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="178.49" y="127.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (362,057 samples, 0.06%)</title><rect x="1141.4" y="197" width="0.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1144.37" y="207.5" ></text>
</g>
<g >
<title>handle_mm_fault (785,811 samples, 0.14%)</title><rect x="169.9" y="149" width="1.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="172.93" y="159.5" ></text>
</g>
<g >
<title>lru_add_fn (416,338 samples, 0.07%)</title><rect x="169.9" y="85" width="0.9" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="172.93" y="95.5" ></text>
</g>
<g >
<title>folio_add_lru (416,338 samples, 0.07%)</title><rect x="169.9" y="117" width="0.9" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="172.93" y="127.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_VP8LReadBits (1,847,112 samples, 0.33%)</title><rect x="1170.4" y="213" width="3.9" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="1173.42" y="223.5" ></text>
</g>
<g >
<title>__count_memcg_events (369,473 samples, 0.07%)</title><rect x="170.8" y="117" width="0.8" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="173.81" y="127.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (884,161 samples, 0.16%)</title><rect x="1043.9" y="181" width="1.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1046.93" y="191.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_TM16_SSE2 (923,343 samples, 0.17%)</title><rect x="90.0" y="197" width="2.0" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="93.03" y="207.5" ></text>
</g>
<g >
<title>do_syscall_64 (478,775 samples, 0.09%)</title><rect x="11.0" y="181" width="1.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.97" y="191.5" ></text>
</g>
<g >
<title>do_user_addr_fault (459,722 samples, 0.08%)</title><rect x="10.0" y="149" width="1.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="13.00" y="159.5" ></text>
</g>
<g >
<title>all (558,393,951 samples, 100%)</title><rect x="10.0" y="245" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>count_memcg_events.constprop.0 (369,473 samples, 0.07%)</title><rect x="170.8" y="133" width="0.8" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="173.81" y="143.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_GetCoeffsAlt (229,761,117 samples, 41.15%)</title><rect x="258.7" y="213" width="485.5" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="261.68" y="223.5" >w2c_decode__webp__wasmsimd_GetCoeffsAlt</text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_IDecode (78,100,060 samples, 13.99%)</title><rect x="880.8" y="213" width="165.0" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="883.76" y="223.5" >w2c_decode__webp__was..</text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_TransformWHT_C (923,196 samples, 0.17%)</title><rect x="107.6" y="197" width="2.0" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="110.60" y="207.5" ></text>
</g>
<g >
<title>__handle_mm_fault (416,338 samples, 0.07%)</title><rect x="169.9" y="133" width="0.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="172.93" y="143.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_DispatchAlpha_SSE2 (11,968,275 samples, 2.14%)</title><rect x="227.5" y="213" width="25.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="230.54" y="223.5" >w..</text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_DecodeWebpImage (886,682 samples, 0.16%)</title><rect x="225.7" y="213" width="1.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="228.66" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_execve (478,775 samples, 0.09%)</title><rect x="11.0" y="165" width="1.0" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="13.97" y="175.5" ></text>
</g>
<g >
<title>map_vdso (361,394 samples, 0.06%)</title><rect x="11.2" y="101" width="0.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="14.22" y="111.5" ></text>
</g>
<g >
<title>do_user_addr_fault (785,811 samples, 0.14%)</title><rect x="169.9" y="165" width="1.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="172.93" y="175.5" ></text>
</g>
<g >
<title>[unknown] (71,065,575 samples, 12.73%)</title><rect x="10.0" y="213" width="150.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >[unknown]</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (884,161 samples, 0.16%)</title><rect x="1043.9" y="197" width="1.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1046.93" y="207.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_GetLargeValue (51,967,483 samples, 9.31%)</title><rect x="744.2" y="213" width="109.8" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="747.22" y="223.5" >w2c_decode__w..</text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_TM8uv_SSE2 (921,356 samples, 0.17%)</title><rect x="1059.5" y="213" width="1.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1062.47" y="223.5" ></text>
</g>
<g >
<title>handle_mm_fault (459,722 samples, 0.08%)</title><rect x="10.0" y="133" width="1.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="13.00" y="143.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_HFilter8_SSE2 (2,208,574 samples, 0.40%)</title><rect x="874.1" y="213" width="4.7" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="877.14" y="223.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_DC4_C (4,611,356 samples, 0.83%)</title><rect x="12.0" y="197" width="9.7" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="14.98" y="207.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_DC8uv_SSE2 (2,763,978 samples, 0.49%)</title><rect x="185.2" y="213" width="5.9" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="188.25" y="223.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_ExtractGreen_SSE2 (2,770,404 samples, 0.50%)</title><rect x="23.7" y="197" width="5.8" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="26.68" y="207.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned (923,867 samples, 0.17%)</title><rect x="160.2" y="213" width="1.9" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="163.18" y="223.5" ></text>
</g>
<g >
<title>__handle_mm_fault (459,722 samples, 0.08%)</title><rect x="10.0" y="117" width="1.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="13.00" y="127.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_ReconstructRow (11,083,168 samples, 1.98%)</title><rect x="66.6" y="197" width="23.4" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="69.61" y="207.5" >w..</text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_VP8LDecodeAlphaHeader (461,644 samples, 0.08%)</title><rect x="1169.4" y="213" width="1.0" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1172.44" y="223.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_VFilter16_SSE2 (924,234 samples, 0.17%)</title><rect x="1142.1" y="213" width="2.0" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1145.13" y="223.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_VP8GetValue (6,465,831 samples, 1.16%)</title><rect x="1155.8" y="213" width="13.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1158.78" y="223.5" ></text>
</g>
<g >
<title>begin_new_exec (117,381 samples, 0.02%)</title><rect x="11.0" y="101" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="13.97" y="111.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4,476,200 samples, 0.80%)</title><rect x="162.1" y="213" width="9.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="165.13" y="223.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_DecodeImageData (16,360,831 samples, 2.93%)</title><rect x="191.1" y="213" width="34.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="194.09" y="223.5" >w2..</text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_DC8uvNoLeft_SSE2 (923,677 samples, 0.17%)</title><rect x="183.3" y="213" width="1.9" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="186.30" y="223.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_HU4_C (1,847,388 samples, 0.33%)</title><rect x="51.0" y="197" width="3.9" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="54.00" y="207.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (361,394 samples, 0.06%)</title><rect x="11.2" y="53" width="0.8" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="14.22" y="63.5" ></text>
</g>
<g >
<title>check_preemption_disabled (369,473 samples, 0.07%)</title><rect x="170.8" y="101" width="0.8" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="173.81" y="111.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_Transform_SSE2 (23,956,635 samples, 4.29%)</title><rect x="109.6" y="197" width="50.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="112.55" y="207.5" >w2c_d..</text>
</g>
<g >
<title>vma_alloc_folio (459,722 samples, 0.08%)</title><rect x="10.0" y="101" width="1.0" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="13.00" y="111.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_BuildHuffmanTable (2,768,143 samples, 0.50%)</title><rect x="177.4" y="213" width="5.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="180.45" y="223.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_FinishRow (2,771,660 samples, 0.50%)</title><rect x="252.8" y="213" width="5.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="255.83" y="223.5" ></text>
</g>
<g >
<title>exc_page_fault (785,811 samples, 0.14%)</title><rect x="169.9" y="181" width="1.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="172.93" y="191.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_HFilter16_SSE2 (1,743,647 samples, 0.31%)</title><rect x="858.7" y="213" width="3.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="861.75" y="223.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_memcpy (924,331 samples, 0.17%)</title><rect x="1184.1" y="213" width="1.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1187.08" y="223.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_TransformDC_C (3,694,431 samples, 0.66%)</title><rect x="99.8" y="197" width="7.8" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="102.79" y="207.5" ></text>
</g>
<g >
<title>clear_page_rep (459,722 samples, 0.08%)</title><rect x="10.0" y="37" width="1.0" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="13.00" y="47.5" ></text>
</g>
<g >
<title>perf_event_mmap (361,394 samples, 0.06%)</title><rect x="11.2" y="69" width="0.8" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="14.22" y="79.5" ></text>
</g>
<g >
<title>folio_batch_move_lru (416,338 samples, 0.07%)</title><rect x="169.9" y="101" width="0.9" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="172.93" y="111.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (884,161 samples, 0.16%)</title><rect x="1043.9" y="165" width="1.9" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1046.93" y="175.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_ReconstructRow (6,466,084 samples, 1.16%)</title><rect x="1045.8" y="213" width="13.7" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1048.80" y="223.5" ></text>
</g>
<g >
<title>task_work_run (924,224 samples, 0.17%)</title><rect x="175.5" y="133" width="1.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="178.49" y="143.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (478,775 samples, 0.09%)</title><rect x="11.0" y="197" width="1.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.97" y="207.5" ></text>
</g>
<g >
<title>do_exit (924,224 samples, 0.17%)</title><rect x="175.5" y="149" width="1.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="178.49" y="159.5" ></text>
</g>
<g >
<title>get_page_from_freelist (459,722 samples, 0.08%)</title><rect x="10.0" y="53" width="1.0" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="13.00" y="63.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_IDecode (4,616,700 samples, 0.83%)</title><rect x="54.9" y="197" width="9.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="57.90" y="207.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd_TransformAC3_C (6,462,608 samples, 1.16%)</title><rect x="1061.4" y="213" width="13.7" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1064.41" y="223.5" ></text>
</g>
</g>
</svg>
