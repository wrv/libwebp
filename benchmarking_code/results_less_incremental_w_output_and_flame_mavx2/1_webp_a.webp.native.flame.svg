<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="358" onload="init(evt)" viewBox="0 0 1200 358" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="358.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="341" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="341" > </text>
<g id="frames">
<g >
<title>do_syscall_64 (924,097 samples, 0.12%)</title><rect x="1186.4" y="245" width="1.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1189.40" y="255.5" ></text>
</g>
<g >
<title>do_group_exit (922,745 samples, 0.12%)</title><rect x="1188.5" y="229" width="1.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1191.54" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (924,097 samples, 0.12%)</title><rect x="1186.4" y="229" width="1.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1189.40" y="239.5" ></text>
</g>
<g >
<title>HFilter16_C (15,702,576 samples, 2.05%)</title><rect x="610.1" y="261" width="24.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="613.06" y="271.5" >H..</text>
</g>
<g >
<title>padzero (358,232 samples, 0.05%)</title><rect x="1183.0" y="165" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1186.03" y="175.5" ></text>
</g>
<g >
<title>ReconstructRow (7,324,509 samples, 0.95%)</title><rect x="201.7" y="277" width="11.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="204.73" y="287.5" ></text>
</g>
<g >
<title>DC4_C (6,397,772 samples, 0.83%)</title><rect x="12.8" y="277" width="9.9" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="15.84" y="287.5" ></text>
</g>
<g >
<title>unmap_region (924,097 samples, 0.12%)</title><rect x="1186.4" y="165" width="1.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1189.40" y="175.5" ></text>
</g>
<g >
<title>all (767,580,640 samples, 100%)</title><rect x="10.0" y="309" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (467,918 samples, 0.06%)</title><rect x="1182.9" y="245" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1185.87" y="255.5" ></text>
</g>
<g >
<title>__libc_write (1,846,600 samples, 0.24%)</title><rect x="1178.6" y="261" width="2.8" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1181.61" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,846,600 samples, 0.24%)</title><rect x="1178.6" y="245" width="2.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1181.61" y="255.5" ></text>
</g>
<g >
<title>ksys_write (1,846,600 samples, 0.24%)</title><rect x="1178.6" y="213" width="2.8" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1181.61" y="223.5" ></text>
</g>
<g >
<title>VP8GetValue (3,695,744 samples, 0.48%)</title><rect x="529.4" y="277" width="5.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="532.43" y="287.5" ></text>
</g>
<g >
<title>do_user_addr_fault (465,432 samples, 0.06%)</title><rect x="1187.8" y="229" width="0.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1190.82" y="239.5" ></text>
</g>
<g >
<title>__handle_mm_fault (358,232 samples, 0.05%)</title><rect x="1183.0" y="69" width="0.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1186.03" y="79.5" ></text>
</g>
<g >
<title>GetCoeffsFast (3,694,511 samples, 0.48%)</title><rect x="148.7" y="277" width="5.7" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="151.72" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (922,745 samples, 0.12%)</title><rect x="1188.5" y="261" width="1.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1191.54" y="271.5" ></text>
</g>
<g >
<title>ReconstructRow (7,295,587 samples, 0.95%)</title><rect x="644.1" y="261" width="11.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="647.14" y="271.5" ></text>
</g>
<g >
<title>generic_perform_write (1,846,600 samples, 0.24%)</title><rect x="1178.6" y="165" width="2.8" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1181.61" y="175.5" ></text>
</g>
<g >
<title>DC8uvNoTop_C (923,606 samples, 0.12%)</title><rect x="543.6" y="261" width="1.4" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="546.58" y="271.5" ></text>
</g>
<g >
<title>wp_page_copy (465,432 samples, 0.06%)</title><rect x="1187.8" y="181" width="0.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1190.82" y="191.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (923,725 samples, 0.12%)</title><rect x="1181.4" y="261" width="1.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1184.45" y="271.5" ></text>
</g>
<g >
<title>do_exit (922,745 samples, 0.12%)</title><rect x="1188.5" y="213" width="1.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1191.54" y="223.5" ></text>
</g>
<g >
<title>FilterLoop26_C (46,027,746 samples, 6.00%)</title><rect x="78.0" y="277" width="70.7" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="80.96" y="287.5" >FilterL..</text>
</g>
<g >
<title>LD4_C (924,146 samples, 0.12%)</title><rect x="200.3" y="277" width="1.4" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="203.31" y="287.5" ></text>
</g>
<g >
<title>DC8uv_C (924,044 samples, 0.12%)</title><rect x="545.0" y="261" width="1.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="548.00" y="271.5" ></text>
</g>
<g >
<title>exit_mmap (922,745 samples, 0.12%)</title><rect x="1188.5" y="181" width="1.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1191.54" y="191.5" ></text>
</g>
<g >
<title>perf_iterate_sb (109,686 samples, 0.01%)</title><rect x="1182.9" y="133" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1185.87" y="143.5" ></text>
</g>
<g >
<title>decode_webp_nat (767,552,410 samples, 100.00%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="13.00" y="303.5" >decode_webp_nat</text>
</g>
<g >
<title>TransformAC3_C (2,634,383 samples, 0.34%)</title><rect x="217.2" y="277" width="4.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="220.25" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (922,745 samples, 0.12%)</title><rect x="1188.5" y="277" width="1.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1191.54" y="287.5" ></text>
</g>
<g >
<title>__mem_cgroup_flush_stats (1,846,600 samples, 0.24%)</title><rect x="1178.6" y="101" width="2.8" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1181.61" y="111.5" ></text>
</g>
<g >
<title>VR4_C (2,742,873 samples, 0.36%)</title><rect x="537.9" y="277" width="4.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="540.95" y="287.5" ></text>
</g>
<g >
<title>do_user_addr_fault (358,232 samples, 0.05%)</title><rect x="1183.0" y="101" width="0.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1186.03" y="111.5" ></text>
</g>
<g >
<title>DecodeImageData (20,255,474 samples, 2.64%)</title><rect x="848.0" y="245" width="31.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="851.03" y="255.5" >De..</text>
</g>
<g >
<title>do_mas_munmap (924,097 samples, 0.12%)</title><rect x="1186.4" y="197" width="1.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1189.40" y="207.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (922,745 samples, 0.12%)</title><rect x="1188.5" y="245" width="1.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1191.54" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_execve (467,918 samples, 0.06%)</title><rect x="1182.9" y="229" width="0.7" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1185.87" y="239.5" ></text>
</g>
<g >
<title>exc_page_fault (358,232 samples, 0.05%)</title><rect x="1183.0" y="117" width="0.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1186.03" y="127.5" ></text>
</g>
<g >
<title>GetLargeValue (36,865,222 samples, 4.80%)</title><rect x="550.5" y="261" width="56.7" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="553.54" y="271.5" >GetLar..</text>
</g>
<g >
<title>mem_cgroup_css_rstat_flush (923,948 samples, 0.12%)</title><rect x="1180.0" y="53" width="1.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1183.02" y="63.5" ></text>
</g>
<g >
<title>HFilter16i_C (27,209,844 samples, 3.54%)</title><rect x="155.8" y="277" width="41.8" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="158.81" y="287.5" >HFi..</text>
</g>
<g >
<title>perf_iterate_ctx (109,686 samples, 0.01%)</title><rect x="1182.9" y="117" width="0.1" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="1185.87" y="127.5" ></text>
</g>
<g >
<title>__vm_munmap (924,097 samples, 0.12%)</title><rect x="1186.4" y="213" width="1.4" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="1189.40" y="223.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (1,846,600 samples, 0.24%)</title><rect x="1178.6" y="181" width="2.8" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1181.61" y="191.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (924,097 samples, 0.12%)</title><rect x="1186.4" y="149" width="1.4" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1189.40" y="159.5" ></text>
</g>
<g >
<title>FinishRow (924,252 samples, 0.12%)</title><rect x="546.4" y="261" width="1.4" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="549.42" y="271.5" ></text>
</g>
<g >
<title>charge_memcg (465,432 samples, 0.06%)</title><rect x="1187.8" y="149" width="0.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1190.82" y="159.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3,599,285 samples, 0.47%)</title><rect x="1173.1" y="245" width="5.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1176.07" y="255.5" ></text>
</g>
<g >
<title>__handle_mm_fault (465,432 samples, 0.06%)</title><rect x="1187.8" y="197" width="0.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1190.82" y="207.5" ></text>
</g>
<g >
<title>balance_dirty_pages (1,846,600 samples, 0.24%)</title><rect x="1178.6" y="133" width="2.8" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1181.61" y="143.5" ></text>
</g>
<g >
<title>do_mas_align_munmap (924,097 samples, 0.12%)</title><rect x="1186.4" y="181" width="1.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1189.40" y="191.5" ></text>
</g>
<g >
<title>perf_event_comm (109,686 samples, 0.01%)</title><rect x="1182.9" y="149" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1185.87" y="159.5" ></text>
</g>
<g >
<title>GetCoeffsFast (1,755,484 samples, 0.23%)</title><rect x="547.8" y="261" width="2.7" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="550.85" y="271.5" ></text>
</g>
<g >
<title>ShiftBytes (1,847,588 samples, 0.24%)</title><rect x="1169.0" y="245" width="2.8" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1171.98" y="255.5" ></text>
</g>
<g >
<title>cgroup_rstat_flush_irqsafe (1,846,600 samples, 0.24%)</title><rect x="1178.6" y="85" width="2.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1181.61" y="95.5" ></text>
</g>
<g >
<title>begin_new_exec (109,686 samples, 0.01%)</title><rect x="1182.9" y="165" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1185.87" y="175.5" ></text>
</g>
<g >
<title>UpsampleRgbLinePair_C (151,394,741 samples, 19.72%)</title><rect x="231.8" y="277" width="232.8" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="234.82" y="287.5" >UpsampleRgbLinePair_C</text>
</g>
<g >
<title>asm_exc_page_fault (465,432 samples, 0.06%)</title><rect x="1187.8" y="261" width="0.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1190.82" y="271.5" ></text>
</g>
<g >
<title>handle_mm_fault (465,432 samples, 0.06%)</title><rect x="1187.8" y="213" width="0.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1190.82" y="223.5" ></text>
</g>
<g >
<title>HE4_C (921,000 samples, 0.12%)</title><rect x="154.4" y="277" width="1.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="157.40" y="287.5" ></text>
</g>
<g >
<title>TransformDC_C (1,846,867 samples, 0.24%)</title><rect x="675.2" y="261" width="2.9" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="678.23" y="271.5" ></text>
</g>
<g >
<title>vfs_write (1,846,600 samples, 0.24%)</title><rect x="1178.6" y="197" width="2.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1181.61" y="207.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (467,918 samples, 0.06%)</title><rect x="1182.9" y="213" width="0.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1185.87" y="223.5" ></text>
</g>
<g >
<title>unmap_vmas (922,745 samples, 0.12%)</title><rect x="1188.5" y="165" width="1.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1191.54" y="175.5" ></text>
</g>
<g >
<title>HE8uv_C (1,846,594 samples, 0.24%)</title><rect x="607.2" y="261" width="2.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="610.22" y="271.5" ></text>
</g>
<g >
<title>VP8DecodeMB (6,428,601 samples, 0.84%)</title><rect x="519.5" y="277" width="9.9" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="522.54" y="287.5" ></text>
</g>
<g >
<title>VP8ParseIntraModeRow (44,563,988 samples, 5.81%)</title><rect x="779.5" y="261" width="68.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="782.52" y="271.5" >VP8Pars..</text>
</g>
<g >
<title>IDecode (1,848,292 samples, 0.24%)</title><rect x="641.3" y="261" width="2.8" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="644.30" y="271.5" ></text>
</g>
<g >
<title>VFilter16i_C (35,766,259 samples, 4.66%)</title><rect x="464.6" y="277" width="54.9" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="467.56" y="287.5" >VFilt..</text>
</g>
<g >
<title>handle_mm_fault (358,232 samples, 0.05%)</title><rect x="1183.0" y="85" width="0.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1186.03" y="95.5" ></text>
</g>
<g >
<title>bprm_execve (467,918 samples, 0.06%)</title><rect x="1182.9" y="197" width="0.7" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1185.87" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (924,097 samples, 0.12%)</title><rect x="1186.4" y="261" width="1.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1189.40" y="271.5" ></text>
</g>
<g >
<title>TransformDC_C (2,771,481 samples, 0.36%)</title><rect x="221.3" y="277" width="4.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="224.30" y="287.5" ></text>
</g>
<g >
<title>[unknown] (215,040,355 samples, 28.02%)</title><rect x="848.0" y="261" width="330.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="851.03" y="271.5" >[unknown]</text>
</g>
<g >
<title>load_elf_binary (467,918 samples, 0.06%)</title><rect x="1182.9" y="181" width="0.7" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1185.87" y="191.5" ></text>
</g>
<g >
<title>cgroup_rstat_flush_locked (1,846,600 samples, 0.24%)</title><rect x="1178.6" y="69" width="2.8" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1181.61" y="79.5" ></text>
</g>
<g >
<title>clear_user_rep_good (358,232 samples, 0.05%)</title><rect x="1183.0" y="149" width="0.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1186.03" y="159.5" ></text>
</g>
<g >
<title>VP8ParseIntraModeRow (1,847,320 samples, 0.24%)</title><rect x="535.1" y="277" width="2.8" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="538.11" y="287.5" ></text>
</g>
<g >
<title>TM4_C (2,771,849 samples, 0.36%)</title><rect x="213.0" y="277" width="4.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="215.99" y="287.5" ></text>
</g>
<g >
<title>VP8LDoFillBitWindow (813,369 samples, 0.11%)</title><rect x="1171.8" y="245" width="1.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1174.82" y="255.5" ></text>
</g>
<g >
<title>TM16_C (12,932,806 samples, 1.68%)</title><rect x="655.4" y="261" width="19.8" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="658.35" y="271.5" ></text>
</g>
<g >
<title>TransformOne_C (49,744,273 samples, 6.48%)</title><rect x="678.1" y="261" width="76.4" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="681.07" y="271.5" >Transfor..</text>
</g>
<g >
<title>HFilter8i_C (4,618,575 samples, 0.60%)</title><rect x="634.2" y="261" width="7.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="637.20" y="271.5" ></text>
</g>
<g >
<title>copy_page (358,232 samples, 0.05%)</title><rect x="1183.0" y="37" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1186.03" y="47.5" ></text>
</g>
<g >
<title>VP8DecodeMB (16,244,274 samples, 2.12%)</title><rect x="754.5" y="261" width="25.0" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="757.54" y="271.5" >V..</text>
</g>
<g >
<title>exc_page_fault (465,432 samples, 0.06%)</title><rect x="1187.8" y="245" width="0.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1190.82" y="255.5" ></text>
</g>
<g >
<title>mem_cgroup_wb_stats (1,846,600 samples, 0.24%)</title><rect x="1178.6" y="117" width="2.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1181.61" y="127.5" ></text>
</g>
<g >
<title>[unknown] (417,238,818 samples, 54.36%)</title><rect x="542.2" y="277" width="641.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="545.16" y="287.5" >[unknown]</text>
</g>
<g >
<title>HU4_C (1,732,863 samples, 0.23%)</title><rect x="197.6" y="277" width="2.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="200.64" y="287.5" ></text>
</g>
<g >
<title>__mmput (922,745 samples, 0.12%)</title><rect x="1188.5" y="197" width="1.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1191.54" y="207.5" ></text>
</g>
<g >
<title>DC8uvNoLeft_C (923,780 samples, 0.12%)</title><rect x="542.2" y="261" width="1.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="545.16" y="271.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (465,432 samples, 0.06%)</title><rect x="1187.8" y="165" width="0.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1190.82" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (467,918 samples, 0.06%)</title><rect x="1182.9" y="261" width="0.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1185.87" y="271.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1,832,785 samples, 0.24%)</title><rect x="1183.6" y="277" width="2.8" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1186.58" y="287.5" ></text>
</g>
<g >
<title>do_fault (358,232 samples, 0.05%)</title><rect x="1183.0" y="53" width="0.6" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1186.03" y="63.5" ></text>
</g>
<g >
<title>__register_frame_info (465,432 samples, 0.06%)</title><rect x="1187.8" y="277" width="0.7" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1190.82" y="287.5" ></text>
</g>
<g >
<title>GetCoeffsFast (185,756,484 samples, 24.20%)</title><rect x="879.2" y="245" width="285.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="882.16" y="255.5" >GetCoeffsFast</text>
</g>
<g >
<title>ExtractGreen_C (17,548,988 samples, 2.29%)</title><rect x="22.7" y="277" width="27.0" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="25.68" y="287.5" >E..</text>
</g>
<g >
<title>asm_exc_page_fault (358,232 samples, 0.05%)</title><rect x="1183.0" y="133" width="0.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1186.03" y="143.5" ></text>
</g>
<g >
<title>GetLargeValue (2,768,155 samples, 0.36%)</title><rect x="1164.7" y="245" width="4.3" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1167.73" y="255.5" ></text>
</g>
<g >
<title>BuildHuffmanTable (1,848,433 samples, 0.24%)</title><rect x="10.0" y="277" width="2.8" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>FilterLoop24_C (18,412,632 samples, 2.40%)</title><rect x="49.7" y="277" width="28.3" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="52.65" y="287.5" >F..</text>
</g>
<g >
<title>balance_dirty_pages_ratelimited_flags (1,846,600 samples, 0.24%)</title><rect x="1178.6" y="149" width="2.8" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1181.61" y="159.5" ></text>
</g>
<g >
<title>__munmap (924,097 samples, 0.12%)</title><rect x="1186.4" y="277" width="1.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1189.40" y="287.5" ></text>
</g>
<g >
<title>TransformTwo_C (4,072,838 samples, 0.53%)</title><rect x="225.6" y="277" width="6.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="228.56" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,846,600 samples, 0.24%)</title><rect x="1178.6" y="229" width="2.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1181.61" y="239.5" ></text>
</g>
<g >
<title>unmap_page_range (922,745 samples, 0.12%)</title><rect x="1188.5" y="149" width="1.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1191.54" y="159.5" ></text>
</g>
</g>
</svg>
