<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="310" onload="init(evt)" viewBox="0 0 1200 310" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="310.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="293" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="293" > </text>
<g id="frames">
<g >
<title>w2c_decode__webp__wasmsimd__sse41_DoFilter2_SSE2 (167,780,873 samples, 0.05%)</title><rect x="984.6" y="69" width="0.6" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="987.65" y="79.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_NzCodeBits (34,844,655 samples, 0.01%)</title><rect x="853.0" y="117" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="856.01" y="127.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_Store16x4_SSE2 (457,184,856 samples, 0.13%)</title><rect x="982.5" y="53" width="1.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="985.52" y="63.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_DC4_C (50,573,841 samples, 0.01%)</title><rect x="1061.4" y="117" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1064.36" y="127.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_Transform_SSE2 (11,958,568,655 samples, 3.45%)</title><rect x="1117.3" y="101" width="40.7" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1120.31" y="111.5" >w2c..</text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_DoFilter2_SSE2 (506,437,514 samples, 0.15%)</title><rect x="980.6" y="53" width="1.8" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="983.65" y="63.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_ReconstructRow (58,434,635,150 samples, 16.84%)</title><rect x="990.4" y="133" width="198.8" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="993.43" y="143.5" >w2c_decode__webp__wasmsimd..</text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_HE16_SSE41 (35,286,766 samples, 0.01%)</title><rect x="1188.4" y="117" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1191.43" y="127.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_SimpleHFilter16_SSE2 (2,154,539,090 samples, 0.62%)</title><rect x="976.7" y="69" width="7.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="979.75" y="79.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_GetCoeffsAlt (13,146,139,385 samples, 3.79%)</title><rect x="808.3" y="117" width="44.7" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="811.29" y="127.5" >w2c_..</text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_VP8Transpose_2_4x4_16b (273,735,362 samples, 0.08%)</title><rect x="1157.1" y="85" width="0.9" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1160.06" y="95.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_VP8DecodeMB (44,048,794,069 samples, 12.70%)</title><rect x="703.3" y="149" width="149.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="706.34" y="159.5" >w2c_decode__webp__w..</text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_VP8GetSigned (100,813,992 samples, 0.03%)</title><rect x="852.7" y="101" width="0.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="855.67" y="111.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_FilterRow (10,636,525,490 samples, 3.07%)</title><rect x="954.3" y="117" width="36.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="957.25" y="127.5" >w2c..</text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_Transform_SSE2 (2,303,467,771 samples, 0.66%)</title><rect x="1180.6" y="85" width="7.8" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1183.57" y="95.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_VP8ProcessRow (94,698,426,184 samples, 27.30%)</title><rect x="867.1" y="149" width="322.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="870.09" y="159.5" >w2c_decode__webp__wasmsimd__sse41_VP8Proces..</text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_SimpleVFilter16_SSE2 (1,015,419,609 samples, 0.29%)</title><rect x="987.0" y="69" width="3.4" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="989.98" y="79.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_WebPDecode (306,099,835,564 samples, 88.24%)</title><rect x="148.8" y="213" width="1041.2" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="151.83" y="223.5" >w2c_decode__webp__wasmsimd__sse41_WebPDecode</text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_DoTransform (28,307,140,484 samples, 8.16%)</title><rect x="1061.7" y="117" width="96.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1064.70" y="127.5" >w2c_decode_..</text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_TransformUV_C (4,614,288,962 samples, 1.33%)</title><rect x="1172.7" y="101" width="15.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1175.71" y="111.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_DoFilter2_SSE2 (185,308,882 samples, 0.05%)</title><rect x="971.5" y="69" width="0.6" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="974.49" y="79.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_VP8GetBit0x2E1 (94,113,207 samples, 0.03%)</title><rect x="850.6" y="85" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="853.60" y="95.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_Load16x4_SSE2 (43,462,801 samples, 0.01%)</title><rect x="982.4" y="53" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="985.37" y="63.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_DoSimpleFilter_SSE2 (33,266,373 samples, 0.01%)</title><rect x="982.2" y="37" width="0.1" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="985.21" y="47.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_VP8GetBit (95,217,612 samples, 0.03%)</title><rect x="866.8" y="117" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="869.76" y="127.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_SimpleHFilter16i_SSE2 (3,322,526,747 samples, 0.96%)</title><rect x="972.8" y="85" width="11.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="975.77" y="95.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_DecodeWebpImage_0 (346,914,188,441 samples, 100.00%)</title><rect x="10.0" y="229" width="1180.0" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >w2c_decode__webp__wasmsimd__sse41_DecodeWebpImage_0</text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_ParseResiduals (28,592,380,640 samples, 8.24%)</title><rect x="755.9" y="133" width="97.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="758.91" y="143.5" >w2c_decode_..</text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_TransformAC3_C (113,138,826 samples, 0.03%)</title><rect x="1110.8" y="101" width="0.4" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1113.82" y="111.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_Store16x4_SSE2 (167,547,419 samples, 0.05%)</title><rect x="972.2" y="69" width="0.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="975.20" y="79.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_TrueMotion_SSE2 (71,737,921 samples, 0.02%)</title><rect x="1188.8" y="117" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1191.78" y="127.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_clip_8b (31,761,773 samples, 0.01%)</title><rect x="1111.1" y="85" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1114.09" y="95.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_SimpleVFilter16_SSE2 (335,531,368 samples, 0.10%)</title><rect x="984.1" y="85" width="1.1" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="987.07" y="95.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_VP8Decode (224,238,262,695 samples, 64.64%)</title><rect x="426.5" y="181" width="762.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="429.48" y="191.5" >w2c_decode__webp__wasmsimd__sse41_VP8Decode</text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_FinishRow (13,091,958,214 samples, 3.77%)</title><rect x="945.9" y="133" width="44.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="948.90" y="143.5" >w2c_..</text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_SimpleHFilter16_SSE2 (800,574,573 samples, 0.23%)</title><rect x="970.1" y="85" width="2.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="973.05" y="95.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_DC8uv_SSE2 (47,098,160 samples, 0.01%)</title><rect x="1061.5" y="117" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1064.54" y="127.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_DoSimpleFilter_SSE2 (35,238,092 samples, 0.01%)</title><rect x="990.3" y="37" width="0.1" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="993.26" y="47.5" ></text>
</g>
<g >
<title>thread_38524 (346,914,198,057 samples, 100.00%)</title><rect x="10.0" y="245" width="1180.0" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >thread_38524</text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_VP8ParseIntraModeRow (4,092,779,621 samples, 1.18%)</title><rect x="853.2" y="149" width="13.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="856.17" y="159.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_SimpleVFilter16i_SSE2 (1,534,067,197 samples, 0.44%)</title><rect x="985.2" y="85" width="5.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="988.22" y="95.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_GetLargeValue (221,159,086 samples, 0.06%)</title><rect x="850.2" y="101" width="0.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="853.17" y="111.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_DoFilter (8,296,885,850 samples, 2.39%)</title><rect x="962.2" y="101" width="28.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="965.21" y="111.5" >w..</text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_TransformDC_C (1,797,116,298 samples, 0.52%)</title><rect x="1111.2" y="101" width="6.1" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1114.20" y="111.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_VP8ParseProba (111,247,779 samples, 0.03%)</title><rect x="1189.6" y="165" width="0.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1192.61" y="175.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_VP8Transpose_2_4x4_16b (42,260,056 samples, 0.01%)</title><rect x="1188.3" y="69" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1191.26" y="79.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_DoFilter2_SSE2 (513,132,106 samples, 0.15%)</title><rect x="988.7" y="53" width="1.7" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="991.69" y="63.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_ParseIntraMode (2,048,688,885 samples, 0.59%)</title><rect x="860.1" y="133" width="7.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="863.12" y="143.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_VP8LoadNewBytes0x2E1 (40,842,233 samples, 0.01%)</title><rect x="852.5" y="85" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="855.53" y="95.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_TransformDC_C (634,223,128 samples, 0.18%)</title><rect x="1170.6" y="85" width="2.1" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1173.55" y="95.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_DecodeInto (265,284,105,510 samples, 76.47%)</title><rect x="287.7" y="197" width="902.3" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="290.65" y="207.5" >w2c_decode__webp__wasmsimd__sse41_DecodeInto</text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_CustomPut (77,249,695 samples, 0.02%)</title><rect x="954.0" y="117" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="956.99" y="127.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_DC16_SSE2 (47,527,643 samples, 0.01%)</title><rect x="1061.2" y="117" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1064.20" y="127.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_VP8GetBitAlt (513,260,318 samples, 0.15%)</title><rect x="850.9" y="101" width="1.8" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="853.92" y="111.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_DoUVTransform (8,942,483,577 samples, 2.58%)</title><rect x="1158.0" y="117" width="30.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1160.99" y="127.5" >w2..</text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_VP8GetHeaders (232,203,844 samples, 0.07%)</title><rect x="1189.2" y="181" width="0.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1192.20" y="191.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_clip_8b (75,525,772 samples, 0.02%)</title><rect x="1117.1" y="85" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1120.06" y="95.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_EmitYUV (45,882,288 samples, 0.01%)</title><rect x="954.1" y="101" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="957.10" y="111.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_TransformDCUV_C (1,290,838,426 samples, 0.37%)</title><rect x="1168.3" y="101" width="4.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1171.32" y="111.5" ></text>
</g>
<g >
<title>w2c_decode__webp__wasmsimd__sse41_ParseFrame (183,536,940,497 samples, 52.91%)</title><rect x="564.9" y="165" width="624.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="567.91" y="175.5" >w2c_decode__webp__wasmsimd__sse41_ParseFrame</text>
</g>
<g >
<title>all (346,914,198,057 samples, 100%)</title><rect x="10.0" y="261" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
</g>
</svg>
